// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.0
// source: cloud/filestore/public/api/protos/cluster.proto

package protos

import (
	protos "github.com/ydb-platform/nbs/cloud/storage/core/protos"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TClusterNode_EFlags int32

const (
	TClusterNode_F_NONE TClusterNode_EFlags = 0
	// Is this server online and joined cluster successfully?
	TClusterNode_F_ONILNE TClusterNode_EFlags = 1
	// Does this server have clients from the previous epoch that will require recovery?
	TClusterNode_F_NEED_RECOVERY TClusterNode_EFlags = 2
	// Is this server enforcing the grace period by refusing non-reclaim locks?
	TClusterNode_F_GRACE_ENFORCING TClusterNode_EFlags = 3
)

// Enum value maps for TClusterNode_EFlags.
var (
	TClusterNode_EFlags_name = map[int32]string{
		0: "F_NONE",
		1: "F_ONILNE",
		2: "F_NEED_RECOVERY",
		3: "F_GRACE_ENFORCING",
	}
	TClusterNode_EFlags_value = map[string]int32{
		"F_NONE":            0,
		"F_ONILNE":          1,
		"F_NEED_RECOVERY":   2,
		"F_GRACE_ENFORCING": 3,
	}
)

func (x TClusterNode_EFlags) Enum() *TClusterNode_EFlags {
	p := new(TClusterNode_EFlags)
	*p = x
	return p
}

func (x TClusterNode_EFlags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TClusterNode_EFlags) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_filestore_public_api_protos_cluster_proto_enumTypes[0].Descriptor()
}

func (TClusterNode_EFlags) Type() protoreflect.EnumType {
	return &file_cloud_filestore_public_api_protos_cluster_proto_enumTypes[0]
}

func (x TClusterNode_EFlags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TClusterNode_EFlags.Descriptor instead.
func (TClusterNode_EFlags) EnumDescriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{0, 0}
}

type TUpdateClusterRequest_EUpdate int32

const (
	TUpdateClusterRequest_E_START_GRACE TUpdateClusterRequest_EUpdate = 0
	TUpdateClusterRequest_E_STOP_GRACE  TUpdateClusterRequest_EUpdate = 1
	TUpdateClusterRequest_E_JOIN_GRACE  TUpdateClusterRequest_EUpdate = 2
)

// Enum value maps for TUpdateClusterRequest_EUpdate.
var (
	TUpdateClusterRequest_EUpdate_name = map[int32]string{
		0: "E_START_GRACE",
		1: "E_STOP_GRACE",
		2: "E_JOIN_GRACE",
	}
	TUpdateClusterRequest_EUpdate_value = map[string]int32{
		"E_START_GRACE": 0,
		"E_STOP_GRACE":  1,
		"E_JOIN_GRACE":  2,
	}
)

func (x TUpdateClusterRequest_EUpdate) Enum() *TUpdateClusterRequest_EUpdate {
	p := new(TUpdateClusterRequest_EUpdate)
	*p = x
	return p
}

func (x TUpdateClusterRequest_EUpdate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TUpdateClusterRequest_EUpdate) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_filestore_public_api_protos_cluster_proto_enumTypes[1].Descriptor()
}

func (TUpdateClusterRequest_EUpdate) Type() protoreflect.EnumType {
	return &file_cloud_filestore_public_api_protos_cluster_proto_enumTypes[1]
}

func (x TUpdateClusterRequest_EUpdate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TUpdateClusterRequest_EUpdate.Descriptor instead.
func (TUpdateClusterRequest_EUpdate) EnumDescriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{14, 0}
}

type TClusterNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cluster node identifier.
	NodeId string `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	// State flags.
	Flags uint32 `protobuf:"varint,2,opt,name=Flags,proto3" json:"Flags,omitempty"`
	// Number of clients connected.
	Clients uint32 `protobuf:"varint,3,opt,name=Clients,proto3" json:"Clients,omitempty"`
}

func (x *TClusterNode) Reset() {
	*x = TClusterNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TClusterNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TClusterNode) ProtoMessage() {}

func (x *TClusterNode) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TClusterNode.ProtoReflect.Descriptor instead.
func (*TClusterNode) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *TClusterNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *TClusterNode) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *TClusterNode) GetClients() uint32 {
	if x != nil {
		return x.Clients
	}
	return 0
}

type TClusterClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cluster client identifier.
	ClientId string `protobuf:"bytes,1,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	// Some data attached to the client.
	Opaque []byte `protobuf:"bytes,2,opt,name=Opaque,proto3" json:"Opaque,omitempty"`
}

func (x *TClusterClient) Reset() {
	*x = TClusterClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TClusterClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TClusterClient) ProtoMessage() {}

func (x *TClusterClient) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TClusterClient.ProtoReflect.Descriptor instead.
func (*TClusterClient) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *TClusterClient) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *TClusterClient) GetOpaque() []byte {
	if x != nil {
		return x.Opaque
	}
	return nil
}

type TAddClusterNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
	// Cluster node identifier.
	NodeId string `protobuf:"bytes,3,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
}

func (x *TAddClusterNodeRequest) Reset() {
	*x = TAddClusterNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAddClusterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAddClusterNodeRequest) ProtoMessage() {}

func (x *TAddClusterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAddClusterNodeRequest.ProtoReflect.Descriptor instead.
func (*TAddClusterNodeRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *TAddClusterNodeRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TAddClusterNodeRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

func (x *TAddClusterNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type TAddClusterNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TAddClusterNodeResponse) Reset() {
	*x = TAddClusterNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAddClusterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAddClusterNodeResponse) ProtoMessage() {}

func (x *TAddClusterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAddClusterNodeResponse.ProtoReflect.Descriptor instead.
func (*TAddClusterNodeResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *TAddClusterNodeResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

type TRemoveClusterNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
	// Cluster node identifier.
	NodeId string `protobuf:"bytes,3,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
}

func (x *TRemoveClusterNodeRequest) Reset() {
	*x = TRemoveClusterNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRemoveClusterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRemoveClusterNodeRequest) ProtoMessage() {}

func (x *TRemoveClusterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRemoveClusterNodeRequest.ProtoReflect.Descriptor instead.
func (*TRemoveClusterNodeRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *TRemoveClusterNodeRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TRemoveClusterNodeRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

func (x *TRemoveClusterNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type TRemoveClusterNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TRemoveClusterNodeResponse) Reset() {
	*x = TRemoveClusterNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRemoveClusterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRemoveClusterNodeResponse) ProtoMessage() {}

func (x *TRemoveClusterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRemoveClusterNodeResponse.ProtoReflect.Descriptor instead.
func (*TRemoveClusterNodeResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *TRemoveClusterNodeResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

type TListClusterNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
}

func (x *TListClusterNodesRequest) Reset() {
	*x = TListClusterNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListClusterNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListClusterNodesRequest) ProtoMessage() {}

func (x *TListClusterNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListClusterNodesRequest.ProtoReflect.Descriptor instead.
func (*TListClusterNodesRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *TListClusterNodesRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TListClusterNodesRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

type TListClusterNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Cluster nodes.
	Nodes []*TClusterNode `protobuf:"bytes,2,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
}

func (x *TListClusterNodesResponse) Reset() {
	*x = TListClusterNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListClusterNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListClusterNodesResponse) ProtoMessage() {}

func (x *TListClusterNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListClusterNodesResponse.ProtoReflect.Descriptor instead.
func (*TListClusterNodesResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{7}
}

func (x *TListClusterNodesResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TListClusterNodesResponse) GetNodes() []*TClusterNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type TAddClusterClientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
	// Cluster node identifier.
	NodeId string `protobuf:"bytes,3,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	// Clients to add.
	Clients []*TClusterClient `protobuf:"bytes,4,rep,name=Clients,proto3" json:"Clients,omitempty"`
}

func (x *TAddClusterClientsRequest) Reset() {
	*x = TAddClusterClientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAddClusterClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAddClusterClientsRequest) ProtoMessage() {}

func (x *TAddClusterClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAddClusterClientsRequest.ProtoReflect.Descriptor instead.
func (*TAddClusterClientsRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{8}
}

func (x *TAddClusterClientsRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TAddClusterClientsRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

func (x *TAddClusterClientsRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *TAddClusterClientsRequest) GetClients() []*TClusterClient {
	if x != nil {
		return x.Clients
	}
	return nil
}

type TAddClusterClientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TAddClusterClientsResponse) Reset() {
	*x = TAddClusterClientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAddClusterClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAddClusterClientsResponse) ProtoMessage() {}

func (x *TAddClusterClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAddClusterClientsResponse.ProtoReflect.Descriptor instead.
func (*TAddClusterClientsResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{9}
}

func (x *TAddClusterClientsResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

type TRemoveClusterClientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
	// Cluster node identifier.
	NodeId string `protobuf:"bytes,3,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	// Client identifiers to remove.
	ClientIds []string `protobuf:"bytes,4,rep,name=ClientIds,proto3" json:"ClientIds,omitempty"`
}

func (x *TRemoveClusterClientsRequest) Reset() {
	*x = TRemoveClusterClientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRemoveClusterClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRemoveClusterClientsRequest) ProtoMessage() {}

func (x *TRemoveClusterClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRemoveClusterClientsRequest.ProtoReflect.Descriptor instead.
func (*TRemoveClusterClientsRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{10}
}

func (x *TRemoveClusterClientsRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TRemoveClusterClientsRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

func (x *TRemoveClusterClientsRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *TRemoveClusterClientsRequest) GetClientIds() []string {
	if x != nil {
		return x.ClientIds
	}
	return nil
}

type TRemoveClusterClientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TRemoveClusterClientsResponse) Reset() {
	*x = TRemoveClusterClientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRemoveClusterClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRemoveClusterClientsResponse) ProtoMessage() {}

func (x *TRemoveClusterClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRemoveClusterClientsResponse.ProtoReflect.Descriptor instead.
func (*TRemoveClusterClientsResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{11}
}

func (x *TRemoveClusterClientsResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

type TListClusterClientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
	// Cluster node identifier.
	NodeId string `protobuf:"bytes,3,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
}

func (x *TListClusterClientsRequest) Reset() {
	*x = TListClusterClientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListClusterClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListClusterClientsRequest) ProtoMessage() {}

func (x *TListClusterClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListClusterClientsRequest.ProtoReflect.Descriptor instead.
func (*TListClusterClientsRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{12}
}

func (x *TListClusterClientsRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TListClusterClientsRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

func (x *TListClusterClientsRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type TListClusterClientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Clients found.
	Clients []*TClusterClient `protobuf:"bytes,2,rep,name=Clients,proto3" json:"Clients,omitempty"`
}

func (x *TListClusterClientsResponse) Reset() {
	*x = TListClusterClientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListClusterClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListClusterClientsResponse) ProtoMessage() {}

func (x *TListClusterClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListClusterClientsResponse.ProtoReflect.Descriptor instead.
func (*TListClusterClientsResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{13}
}

func (x *TListClusterClientsResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TListClusterClientsResponse) GetClients() []*TClusterClient {
	if x != nil {
		return x.Clients
	}
	return nil
}

type TUpdateClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
	// Cluster node identifier.
	NodeId string `protobuf:"bytes,3,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	// Update request.
	Update uint32 `protobuf:"varint,4,opt,name=Update,proto3" json:"Update,omitempty"`
}

func (x *TUpdateClusterRequest) Reset() {
	*x = TUpdateClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TUpdateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TUpdateClusterRequest) ProtoMessage() {}

func (x *TUpdateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TUpdateClusterRequest.ProtoReflect.Descriptor instead.
func (*TUpdateClusterRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{14}
}

func (x *TUpdateClusterRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TUpdateClusterRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

func (x *TUpdateClusterRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *TUpdateClusterRequest) GetUpdate() uint32 {
	if x != nil {
		return x.Update
	}
	return 0
}

type TUpdateClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TUpdateClusterResponse) Reset() {
	*x = TUpdateClusterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TUpdateClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TUpdateClusterResponse) ProtoMessage() {}

func (x *TUpdateClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TUpdateClusterResponse.ProtoReflect.Descriptor instead.
func (*TUpdateClusterResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP(), []int{15}
}

func (x *TUpdateClusterResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_cloud_filestore_public_api_protos_cluster_proto protoreflect.FileDescriptor

var file_cloud_filestore_public_api_protos_cluster_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x01, 0x0a, 0x0c, 0x54, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4e, 0x0a, 0x06,
	0x45, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x5f, 0x4f, 0x4e, 0x49, 0x4c, 0x4e, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x46, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x56,
	0x45, 0x52, 0x59, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x5f, 0x47, 0x52, 0x41, 0x43, 0x45,
	0x5f, 0x45, 0x4e, 0x46, 0x4f, 0x52, 0x43, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x22, 0x44, 0x0a, 0x0e,
	0x54, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70,
	0x61, 0x71, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x4f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x16, 0x54, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x17, 0x54, 0x41, 0x64, 0x64, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x95, 0x01, 0x0a, 0x19, 0x54, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x1a, 0x54, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x7c, 0x0a, 0x18, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c,
	0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x22, 0x86, 0x01, 0x0a, 0x19, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x05, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x19, 0x54, 0x41,
	0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x42, 0x0a, 0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x49, 0x0a, 0x1a, 0x54, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xb6, 0x01, 0x0a, 0x1c, 0x54, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x4c, 0x0a, 0x1d, 0x54, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x96, 0x01, 0x0a, 0x1a, 0x54, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x22, 0x8e, 0x01, 0x0a, 0x1b, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a,
	0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0xeb, 0x01, 0x0a, 0x15, 0x54, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x40, 0x0a,
	0x07, 0x45, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x43, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x45,
	0x5f, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x47, 0x52, 0x41, 0x43, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x45, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x47, 0x52, 0x41, 0x43, 0x45, 0x10, 0x02, 0x22,
	0x45, 0x0a, 0x16, 0x54, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x6e, 0x62, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_filestore_public_api_protos_cluster_proto_rawDescOnce sync.Once
	file_cloud_filestore_public_api_protos_cluster_proto_rawDescData = file_cloud_filestore_public_api_protos_cluster_proto_rawDesc
)

func file_cloud_filestore_public_api_protos_cluster_proto_rawDescGZIP() []byte {
	file_cloud_filestore_public_api_protos_cluster_proto_rawDescOnce.Do(func() {
		file_cloud_filestore_public_api_protos_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_filestore_public_api_protos_cluster_proto_rawDescData)
	})
	return file_cloud_filestore_public_api_protos_cluster_proto_rawDescData
}

var file_cloud_filestore_public_api_protos_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cloud_filestore_public_api_protos_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_cloud_filestore_public_api_protos_cluster_proto_goTypes = []interface{}{
	(TClusterNode_EFlags)(0),              // 0: NCloud.NFileStore.NProto.TClusterNode.EFlags
	(TUpdateClusterRequest_EUpdate)(0),    // 1: NCloud.NFileStore.NProto.TUpdateClusterRequest.EUpdate
	(*TClusterNode)(nil),                  // 2: NCloud.NFileStore.NProto.TClusterNode
	(*TClusterClient)(nil),                // 3: NCloud.NFileStore.NProto.TClusterClient
	(*TAddClusterNodeRequest)(nil),        // 4: NCloud.NFileStore.NProto.TAddClusterNodeRequest
	(*TAddClusterNodeResponse)(nil),       // 5: NCloud.NFileStore.NProto.TAddClusterNodeResponse
	(*TRemoveClusterNodeRequest)(nil),     // 6: NCloud.NFileStore.NProto.TRemoveClusterNodeRequest
	(*TRemoveClusterNodeResponse)(nil),    // 7: NCloud.NFileStore.NProto.TRemoveClusterNodeResponse
	(*TListClusterNodesRequest)(nil),      // 8: NCloud.NFileStore.NProto.TListClusterNodesRequest
	(*TListClusterNodesResponse)(nil),     // 9: NCloud.NFileStore.NProto.TListClusterNodesResponse
	(*TAddClusterClientsRequest)(nil),     // 10: NCloud.NFileStore.NProto.TAddClusterClientsRequest
	(*TAddClusterClientsResponse)(nil),    // 11: NCloud.NFileStore.NProto.TAddClusterClientsResponse
	(*TRemoveClusterClientsRequest)(nil),  // 12: NCloud.NFileStore.NProto.TRemoveClusterClientsRequest
	(*TRemoveClusterClientsResponse)(nil), // 13: NCloud.NFileStore.NProto.TRemoveClusterClientsResponse
	(*TListClusterClientsRequest)(nil),    // 14: NCloud.NFileStore.NProto.TListClusterClientsRequest
	(*TListClusterClientsResponse)(nil),   // 15: NCloud.NFileStore.NProto.TListClusterClientsResponse
	(*TUpdateClusterRequest)(nil),         // 16: NCloud.NFileStore.NProto.TUpdateClusterRequest
	(*TUpdateClusterResponse)(nil),        // 17: NCloud.NFileStore.NProto.TUpdateClusterResponse
	(*THeaders)(nil),                      // 18: NCloud.NFileStore.NProto.THeaders
	(*protos.TError)(nil),                 // 19: NCloud.NProto.TError
}
var file_cloud_filestore_public_api_protos_cluster_proto_depIdxs = []int32{
	18, // 0: NCloud.NFileStore.NProto.TAddClusterNodeRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	19, // 1: NCloud.NFileStore.NProto.TAddClusterNodeResponse.Error:type_name -> NCloud.NProto.TError
	18, // 2: NCloud.NFileStore.NProto.TRemoveClusterNodeRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	19, // 3: NCloud.NFileStore.NProto.TRemoveClusterNodeResponse.Error:type_name -> NCloud.NProto.TError
	18, // 4: NCloud.NFileStore.NProto.TListClusterNodesRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	19, // 5: NCloud.NFileStore.NProto.TListClusterNodesResponse.Error:type_name -> NCloud.NProto.TError
	2,  // 6: NCloud.NFileStore.NProto.TListClusterNodesResponse.Nodes:type_name -> NCloud.NFileStore.NProto.TClusterNode
	18, // 7: NCloud.NFileStore.NProto.TAddClusterClientsRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	3,  // 8: NCloud.NFileStore.NProto.TAddClusterClientsRequest.Clients:type_name -> NCloud.NFileStore.NProto.TClusterClient
	19, // 9: NCloud.NFileStore.NProto.TAddClusterClientsResponse.Error:type_name -> NCloud.NProto.TError
	18, // 10: NCloud.NFileStore.NProto.TRemoveClusterClientsRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	19, // 11: NCloud.NFileStore.NProto.TRemoveClusterClientsResponse.Error:type_name -> NCloud.NProto.TError
	18, // 12: NCloud.NFileStore.NProto.TListClusterClientsRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	19, // 13: NCloud.NFileStore.NProto.TListClusterClientsResponse.Error:type_name -> NCloud.NProto.TError
	3,  // 14: NCloud.NFileStore.NProto.TListClusterClientsResponse.Clients:type_name -> NCloud.NFileStore.NProto.TClusterClient
	18, // 15: NCloud.NFileStore.NProto.TUpdateClusterRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	19, // 16: NCloud.NFileStore.NProto.TUpdateClusterResponse.Error:type_name -> NCloud.NProto.TError
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_cloud_filestore_public_api_protos_cluster_proto_init() }
func file_cloud_filestore_public_api_protos_cluster_proto_init() {
	if File_cloud_filestore_public_api_protos_cluster_proto != nil {
		return
	}
	file_cloud_filestore_public_api_protos_headers_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TClusterNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TClusterClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAddClusterNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAddClusterNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRemoveClusterNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRemoveClusterNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListClusterNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListClusterNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAddClusterClientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAddClusterClientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRemoveClusterClientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRemoveClusterClientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListClusterClientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListClusterClientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TUpdateClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_cluster_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TUpdateClusterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_filestore_public_api_protos_cluster_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_filestore_public_api_protos_cluster_proto_goTypes,
		DependencyIndexes: file_cloud_filestore_public_api_protos_cluster_proto_depIdxs,
		EnumInfos:         file_cloud_filestore_public_api_protos_cluster_proto_enumTypes,
		MessageInfos:      file_cloud_filestore_public_api_protos_cluster_proto_msgTypes,
	}.Build()
	File_cloud_filestore_public_api_protos_cluster_proto = out.File
	file_cloud_filestore_public_api_protos_cluster_proto_rawDesc = nil
	file_cloud_filestore_public_api_protos_cluster_proto_goTypes = nil
	file_cloud_filestore_public_api_protos_cluster_proto_depIdxs = nil
}
