// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.0
// source: cloud/filestore/public/api/protos/session.proto

package protos

import (
	protos "github.com/ydb-platform/nbs/cloud/storage/core/protos"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TSessionEvent_ENodeChangeKind int32

const (
	TSessionEvent_NODE_ATTR_CHANGED  TSessionEvent_ENodeChangeKind = 0
	TSessionEvent_NODE_XATTR_CHANGED TSessionEvent_ENodeChangeKind = 1
)

// Enum value maps for TSessionEvent_ENodeChangeKind.
var (
	TSessionEvent_ENodeChangeKind_name = map[int32]string{
		0: "NODE_ATTR_CHANGED",
		1: "NODE_XATTR_CHANGED",
	}
	TSessionEvent_ENodeChangeKind_value = map[string]int32{
		"NODE_ATTR_CHANGED":  0,
		"NODE_XATTR_CHANGED": 1,
	}
)

func (x TSessionEvent_ENodeChangeKind) Enum() *TSessionEvent_ENodeChangeKind {
	p := new(TSessionEvent_ENodeChangeKind)
	*p = x
	return p
}

func (x TSessionEvent_ENodeChangeKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TSessionEvent_ENodeChangeKind) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_filestore_public_api_protos_session_proto_enumTypes[0].Descriptor()
}

func (TSessionEvent_ENodeChangeKind) Type() protoreflect.EnumType {
	return &file_cloud_filestore_public_api_protos_session_proto_enumTypes[0]
}

func (x TSessionEvent_ENodeChangeKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TSessionEvent_ENodeChangeKind.Descriptor instead.
func (TSessionEvent_ENodeChangeKind) EnumDescriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{1, 0}
}

type TSessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique session identifier (generated on the server-side).
	SessionId string `protobuf:"bytes,1,opt,name=SessionId,proto3" json:"SessionId,omitempty"`
	// Session state if any set.
	SessionState []byte `protobuf:"bytes,2,opt,name=SessionState,proto3" json:"SessionState,omitempty"`
	// Sequence number of created session.
	SessionSeqNo uint64 `protobuf:"varint,3,opt,name=SessionSeqNo,proto3" json:"SessionSeqNo,omitempty"`
	// Read/Write session
	ReadOnly bool `protobuf:"varint,4,opt,name=ReadOnly,proto3" json:"ReadOnly,omitempty"`
}

func (x *TSessionInfo) Reset() {
	*x = TSessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSessionInfo) ProtoMessage() {}

func (x *TSessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSessionInfo.ProtoReflect.Descriptor instead.
func (*TSessionInfo) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{0}
}

func (x *TSessionInfo) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TSessionInfo) GetSessionState() []byte {
	if x != nil {
		return x.SessionState
	}
	return nil
}

func (x *TSessionInfo) GetSessionSeqNo() uint64 {
	if x != nil {
		return x.SessionSeqNo
	}
	return 0
}

func (x *TSessionInfo) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

type TSessionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Event sequence number.
	SeqNo uint64 `protobuf:"varint,1,opt,name=SeqNo,proto3" json:"SeqNo,omitempty"`
	// Event data.
	NodeLinked   []*TSessionEvent_TNodeLinked   `protobuf:"bytes,100,rep,name=NodeLinked,proto3" json:"NodeLinked,omitempty"`
	NodeUnlinked []*TSessionEvent_TNodeUnlinked `protobuf:"bytes,101,rep,name=NodeUnlinked,proto3" json:"NodeUnlinked,omitempty"`
	NodeChanged  []*TSessionEvent_TNodeChanged  `protobuf:"bytes,102,rep,name=NodeChanged,proto3" json:"NodeChanged,omitempty"`
}

func (x *TSessionEvent) Reset() {
	*x = TSessionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSessionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSessionEvent) ProtoMessage() {}

func (x *TSessionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSessionEvent.ProtoReflect.Descriptor instead.
func (*TSessionEvent) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{1}
}

func (x *TSessionEvent) GetSeqNo() uint64 {
	if x != nil {
		return x.SeqNo
	}
	return 0
}

func (x *TSessionEvent) GetNodeLinked() []*TSessionEvent_TNodeLinked {
	if x != nil {
		return x.NodeLinked
	}
	return nil
}

func (x *TSessionEvent) GetNodeUnlinked() []*TSessionEvent_TNodeUnlinked {
	if x != nil {
		return x.NodeUnlinked
	}
	return nil
}

func (x *TSessionEvent) GetNodeChanged() []*TSessionEvent_TNodeChanged {
	if x != nil {
		return x.NodeChanged
	}
	return nil
}

type TCreateSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
	// Checkpoint to work with (read-only access to historic data).
	CheckpointId string `protobuf:"bytes,3,opt,name=CheckpointId,proto3" json:"CheckpointId,omitempty"`
	// Restore previous client session.
	RestoreClientSession bool `protobuf:"varint,4,opt,name=RestoreClientSession,proto3" json:"RestoreClientSession,omitempty"`
	// Readonly mounting.
	ReadOnly bool `protobuf:"varint,5,opt,name=ReadOnly,proto3" json:"ReadOnly,omitempty"`
	// Mount sequence number received from StartEndpoint/KickEndpoint.
	MountSeqNumber uint64 `protobuf:"varint,6,opt,name=MountSeqNumber,proto3" json:"MountSeqNumber,omitempty"`
}

func (x *TCreateSessionRequest) Reset() {
	*x = TCreateSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCreateSessionRequest) ProtoMessage() {}

func (x *TCreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCreateSessionRequest.ProtoReflect.Descriptor instead.
func (*TCreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{2}
}

func (x *TCreateSessionRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TCreateSessionRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

func (x *TCreateSessionRequest) GetCheckpointId() string {
	if x != nil {
		return x.CheckpointId
	}
	return ""
}

func (x *TCreateSessionRequest) GetRestoreClientSession() bool {
	if x != nil {
		return x.RestoreClientSession
	}
	return false
}

func (x *TCreateSessionRequest) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *TCreateSessionRequest) GetMountSeqNumber() uint64 {
	if x != nil {
		return x.MountSeqNumber
	}
	return 0
}

type TCreateSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Session information.
	Session *TSessionInfo `protobuf:"bytes,2,opt,name=Session,proto3" json:"Session,omitempty"`
	// Filestore description.
	FileStore *TFileStore `protobuf:"bytes,3,opt,name=FileStore,proto3" json:"FileStore,omitempty"`
	// Optional response headers.
	Headers *TResponseHeaders `protobuf:"bytes,1000,opt,name=Headers,proto3" json:"Headers,omitempty"`
}

func (x *TCreateSessionResponse) Reset() {
	*x = TCreateSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCreateSessionResponse) ProtoMessage() {}

func (x *TCreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCreateSessionResponse.ProtoReflect.Descriptor instead.
func (*TCreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{3}
}

func (x *TCreateSessionResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TCreateSessionResponse) GetSession() *TSessionInfo {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *TCreateSessionResponse) GetFileStore() *TFileStore {
	if x != nil {
		return x.FileStore
	}
	return nil
}

func (x *TCreateSessionResponse) GetHeaders() *TResponseHeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

type TResetSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
	// State data associated w the session.
	SessionState []byte `protobuf:"bytes,3,opt,name=SessionState,proto3" json:"SessionState,omitempty"`
}

func (x *TResetSessionRequest) Reset() {
	*x = TResetSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TResetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TResetSessionRequest) ProtoMessage() {}

func (x *TResetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TResetSessionRequest.ProtoReflect.Descriptor instead.
func (*TResetSessionRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{4}
}

func (x *TResetSessionRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TResetSessionRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

func (x *TResetSessionRequest) GetSessionState() []byte {
	if x != nil {
		return x.SessionState
	}
	return nil
}

type TResetSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Optional response headers.
	Headers *TResponseHeaders `protobuf:"bytes,1000,opt,name=Headers,proto3" json:"Headers,omitempty"`
}

func (x *TResetSessionResponse) Reset() {
	*x = TResetSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TResetSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TResetSessionResponse) ProtoMessage() {}

func (x *TResetSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TResetSessionResponse.ProtoReflect.Descriptor instead.
func (*TResetSessionResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{5}
}

func (x *TResetSessionResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TResetSessionResponse) GetHeaders() *TResponseHeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

type TDestroySessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
}

func (x *TDestroySessionRequest) Reset() {
	*x = TDestroySessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDestroySessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDestroySessionRequest) ProtoMessage() {}

func (x *TDestroySessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDestroySessionRequest.ProtoReflect.Descriptor instead.
func (*TDestroySessionRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{6}
}

func (x *TDestroySessionRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TDestroySessionRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

type TDestroySessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Optional response headers.
	Headers *TResponseHeaders `protobuf:"bytes,1000,opt,name=Headers,proto3" json:"Headers,omitempty"`
}

func (x *TDestroySessionResponse) Reset() {
	*x = TDestroySessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDestroySessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDestroySessionResponse) ProtoMessage() {}

func (x *TDestroySessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDestroySessionResponse.ProtoReflect.Descriptor instead.
func (*TDestroySessionResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{7}
}

func (x *TDestroySessionResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TDestroySessionResponse) GetHeaders() *TResponseHeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

type TPingSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
}

func (x *TPingSessionRequest) Reset() {
	*x = TPingSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPingSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPingSessionRequest) ProtoMessage() {}

func (x *TPingSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPingSessionRequest.ProtoReflect.Descriptor instead.
func (*TPingSessionRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{8}
}

func (x *TPingSessionRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TPingSessionRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

type TPingSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TPingSessionResponse) Reset() {
	*x = TPingSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPingSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPingSessionResponse) ProtoMessage() {}

func (x *TPingSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPingSessionResponse.ProtoReflect.Descriptor instead.
func (*TPingSessionResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{9}
}

func (x *TPingSessionResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

type TSubscribeSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
}

func (x *TSubscribeSessionRequest) Reset() {
	*x = TSubscribeSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSubscribeSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSubscribeSessionRequest) ProtoMessage() {}

func (x *TSubscribeSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSubscribeSessionRequest.ProtoReflect.Descriptor instead.
func (*TSubscribeSessionRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{10}
}

func (x *TSubscribeSessionRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TSubscribeSessionRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

type TSubscribeSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TSubscribeSessionResponse) Reset() {
	*x = TSubscribeSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSubscribeSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSubscribeSessionResponse) ProtoMessage() {}

func (x *TSubscribeSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSubscribeSessionResponse.ProtoReflect.Descriptor instead.
func (*TSubscribeSessionResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{11}
}

func (x *TSubscribeSessionResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

type TGetSessionEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional request headers.
	Headers *THeaders `protobuf:"bytes,1,opt,name=Headers,proto3" json:"Headers,omitempty"`
	// FileSystem identifier.
	FileSystemId string `protobuf:"bytes,2,opt,name=FileSystemId,proto3" json:"FileSystemId,omitempty"`
	// Last known sequence number.
	SeqNo uint64 `protobuf:"varint,3,opt,name=SeqNo,proto3" json:"SeqNo,omitempty"`
}

func (x *TGetSessionEventsRequest) Reset() {
	*x = TGetSessionEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetSessionEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetSessionEventsRequest) ProtoMessage() {}

func (x *TGetSessionEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetSessionEventsRequest.ProtoReflect.Descriptor instead.
func (*TGetSessionEventsRequest) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{12}
}

func (x *TGetSessionEventsRequest) GetHeaders() *THeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TGetSessionEventsRequest) GetFileSystemId() string {
	if x != nil {
		return x.FileSystemId
	}
	return ""
}

func (x *TGetSessionEventsRequest) GetSeqNo() uint64 {
	if x != nil {
		return x.SeqNo
	}
	return 0
}

type TGetSessionEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	// Events occured on the server-side since last polling.
	Events []*TSessionEvent `protobuf:"bytes,2,rep,name=Events,proto3" json:"Events,omitempty"`
	// Optional response headers.
	Headers *TResponseHeaders `protobuf:"bytes,1000,opt,name=Headers,proto3" json:"Headers,omitempty"`
}

func (x *TGetSessionEventsResponse) Reset() {
	*x = TGetSessionEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetSessionEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetSessionEventsResponse) ProtoMessage() {}

func (x *TGetSessionEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetSessionEventsResponse.ProtoReflect.Descriptor instead.
func (*TGetSessionEventsResponse) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{13}
}

func (x *TGetSessionEventsResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TGetSessionEventsResponse) GetEvents() []*TSessionEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *TGetSessionEventsResponse) GetHeaders() *TResponseHeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

type TSessionEvent_TNodeLinked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentNodeId uint64 `protobuf:"varint,1,opt,name=ParentNodeId,proto3" json:"ParentNodeId,omitempty"`
	ChildNodeId  uint64 `protobuf:"varint,2,opt,name=ChildNodeId,proto3" json:"ChildNodeId,omitempty"`
	Name         []byte `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *TSessionEvent_TNodeLinked) Reset() {
	*x = TSessionEvent_TNodeLinked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSessionEvent_TNodeLinked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSessionEvent_TNodeLinked) ProtoMessage() {}

func (x *TSessionEvent_TNodeLinked) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSessionEvent_TNodeLinked.ProtoReflect.Descriptor instead.
func (*TSessionEvent_TNodeLinked) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TSessionEvent_TNodeLinked) GetParentNodeId() uint64 {
	if x != nil {
		return x.ParentNodeId
	}
	return 0
}

func (x *TSessionEvent_TNodeLinked) GetChildNodeId() uint64 {
	if x != nil {
		return x.ChildNodeId
	}
	return 0
}

func (x *TSessionEvent_TNodeLinked) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

type TSessionEvent_TNodeUnlinked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentNodeId uint64 `protobuf:"varint,1,opt,name=ParentNodeId,proto3" json:"ParentNodeId,omitempty"`
	ChildNodeId  uint64 `protobuf:"varint,2,opt,name=ChildNodeId,proto3" json:"ChildNodeId,omitempty"`
	Name         []byte `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *TSessionEvent_TNodeUnlinked) Reset() {
	*x = TSessionEvent_TNodeUnlinked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSessionEvent_TNodeUnlinked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSessionEvent_TNodeUnlinked) ProtoMessage() {}

func (x *TSessionEvent_TNodeUnlinked) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSessionEvent_TNodeUnlinked.ProtoReflect.Descriptor instead.
func (*TSessionEvent_TNodeUnlinked) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{1, 1}
}

func (x *TSessionEvent_TNodeUnlinked) GetParentNodeId() uint64 {
	if x != nil {
		return x.ParentNodeId
	}
	return 0
}

func (x *TSessionEvent_TNodeUnlinked) GetChildNodeId() uint64 {
	if x != nil {
		return x.ChildNodeId
	}
	return 0
}

func (x *TSessionEvent_TNodeUnlinked) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

type TSessionEvent_TNodeChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId uint64 `protobuf:"varint,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Kind   uint32 `protobuf:"varint,2,opt,name=Kind,proto3" json:"Kind,omitempty"`
}

func (x *TSessionEvent_TNodeChanged) Reset() {
	*x = TSessionEvent_TNodeChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSessionEvent_TNodeChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSessionEvent_TNodeChanged) ProtoMessage() {}

func (x *TSessionEvent_TNodeChanged) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_filestore_public_api_protos_session_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSessionEvent_TNodeChanged.ProtoReflect.Descriptor instead.
func (*TSessionEvent_TNodeChanged) Descriptor() ([]byte, []int) {
	return file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP(), []int{1, 2}
}

func (x *TSessionEvent_TNodeChanged) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *TSessionEvent_TNodeChanged) GetKind() uint32 {
	if x != nil {
		return x.Kind
	}
	return 0
}

var File_cloud_filestore_public_api_protos_session_proto protoreflect.FileDescriptor

var file_cloud_filestore_public_api_protos_session_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x66,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x90, 0x01, 0x0a, 0x0c, 0x54, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x71,
	0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x71, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x22, 0xff, 0x04, 0x0a, 0x0d, 0x54, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x65, 0x71, 0x4e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x53, 0x65, 0x71, 0x4e, 0x6f, 0x12, 0x53, 0x0a, 0x0a, 0x4e, 0x6f,
	0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x52, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x12,
	0x59, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x18,
	0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x4e, 0x6f, 0x64, 0x65, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x52, 0x0c, 0x4e, 0x6f,
	0x64, 0x65, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x0b, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x66, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x1a, 0x67, 0x0a, 0x0b, 0x54, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x69, 0x0a, 0x0d, 0x54,
	0x4e, 0x6f, 0x64, 0x65, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x3a, 0x0a, 0x0c, 0x54, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x4b, 0x69,
	0x6e, 0x64, 0x22, 0x40, 0x0a, 0x0f, 0x45, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x54,
	0x54, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x58, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x44, 0x10, 0x01, 0x22, 0x95, 0x02, 0x0a, 0x15, 0x54, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c,
	0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x71,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x4d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x92, 0x02, 0x0a,
	0x16, 0x54, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x4e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x09, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x54, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x8b, 0x01, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x7a,
	0x0a, 0x16, 0x54, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69,
	0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x54,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0xe8,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x77, 0x0a, 0x13, 0x54, 0x50,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x14, 0x54, 0x50, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x7c, 0x0a, 0x18, 0x54, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x19, 0x54, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x92, 0x01, 0x0a, 0x18, 0x54, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x65, 0x71, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x53, 0x65, 0x71, 0x4e, 0x6f, 0x22, 0xd0, 0x01, 0x0a, 0x19, 0x54, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x3f, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x45, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0xe8, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x46, 0x69,
	0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x6e, 0x62, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_cloud_filestore_public_api_protos_session_proto_rawDescOnce sync.Once
	file_cloud_filestore_public_api_protos_session_proto_rawDescData = file_cloud_filestore_public_api_protos_session_proto_rawDesc
)

func file_cloud_filestore_public_api_protos_session_proto_rawDescGZIP() []byte {
	file_cloud_filestore_public_api_protos_session_proto_rawDescOnce.Do(func() {
		file_cloud_filestore_public_api_protos_session_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_filestore_public_api_protos_session_proto_rawDescData)
	})
	return file_cloud_filestore_public_api_protos_session_proto_rawDescData
}

var file_cloud_filestore_public_api_protos_session_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloud_filestore_public_api_protos_session_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_cloud_filestore_public_api_protos_session_proto_goTypes = []interface{}{
	(TSessionEvent_ENodeChangeKind)(0),  // 0: NCloud.NFileStore.NProto.TSessionEvent.ENodeChangeKind
	(*TSessionInfo)(nil),                // 1: NCloud.NFileStore.NProto.TSessionInfo
	(*TSessionEvent)(nil),               // 2: NCloud.NFileStore.NProto.TSessionEvent
	(*TCreateSessionRequest)(nil),       // 3: NCloud.NFileStore.NProto.TCreateSessionRequest
	(*TCreateSessionResponse)(nil),      // 4: NCloud.NFileStore.NProto.TCreateSessionResponse
	(*TResetSessionRequest)(nil),        // 5: NCloud.NFileStore.NProto.TResetSessionRequest
	(*TResetSessionResponse)(nil),       // 6: NCloud.NFileStore.NProto.TResetSessionResponse
	(*TDestroySessionRequest)(nil),      // 7: NCloud.NFileStore.NProto.TDestroySessionRequest
	(*TDestroySessionResponse)(nil),     // 8: NCloud.NFileStore.NProto.TDestroySessionResponse
	(*TPingSessionRequest)(nil),         // 9: NCloud.NFileStore.NProto.TPingSessionRequest
	(*TPingSessionResponse)(nil),        // 10: NCloud.NFileStore.NProto.TPingSessionResponse
	(*TSubscribeSessionRequest)(nil),    // 11: NCloud.NFileStore.NProto.TSubscribeSessionRequest
	(*TSubscribeSessionResponse)(nil),   // 12: NCloud.NFileStore.NProto.TSubscribeSessionResponse
	(*TGetSessionEventsRequest)(nil),    // 13: NCloud.NFileStore.NProto.TGetSessionEventsRequest
	(*TGetSessionEventsResponse)(nil),   // 14: NCloud.NFileStore.NProto.TGetSessionEventsResponse
	(*TSessionEvent_TNodeLinked)(nil),   // 15: NCloud.NFileStore.NProto.TSessionEvent.TNodeLinked
	(*TSessionEvent_TNodeUnlinked)(nil), // 16: NCloud.NFileStore.NProto.TSessionEvent.TNodeUnlinked
	(*TSessionEvent_TNodeChanged)(nil),  // 17: NCloud.NFileStore.NProto.TSessionEvent.TNodeChanged
	(*THeaders)(nil),                    // 18: NCloud.NFileStore.NProto.THeaders
	(*protos.TError)(nil),               // 19: NCloud.NProto.TError
	(*TFileStore)(nil),                  // 20: NCloud.NFileStore.NProto.TFileStore
	(*TResponseHeaders)(nil),            // 21: NCloud.NFileStore.NProto.TResponseHeaders
}
var file_cloud_filestore_public_api_protos_session_proto_depIdxs = []int32{
	15, // 0: NCloud.NFileStore.NProto.TSessionEvent.NodeLinked:type_name -> NCloud.NFileStore.NProto.TSessionEvent.TNodeLinked
	16, // 1: NCloud.NFileStore.NProto.TSessionEvent.NodeUnlinked:type_name -> NCloud.NFileStore.NProto.TSessionEvent.TNodeUnlinked
	17, // 2: NCloud.NFileStore.NProto.TSessionEvent.NodeChanged:type_name -> NCloud.NFileStore.NProto.TSessionEvent.TNodeChanged
	18, // 3: NCloud.NFileStore.NProto.TCreateSessionRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	19, // 4: NCloud.NFileStore.NProto.TCreateSessionResponse.Error:type_name -> NCloud.NProto.TError
	1,  // 5: NCloud.NFileStore.NProto.TCreateSessionResponse.Session:type_name -> NCloud.NFileStore.NProto.TSessionInfo
	20, // 6: NCloud.NFileStore.NProto.TCreateSessionResponse.FileStore:type_name -> NCloud.NFileStore.NProto.TFileStore
	21, // 7: NCloud.NFileStore.NProto.TCreateSessionResponse.Headers:type_name -> NCloud.NFileStore.NProto.TResponseHeaders
	18, // 8: NCloud.NFileStore.NProto.TResetSessionRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	19, // 9: NCloud.NFileStore.NProto.TResetSessionResponse.Error:type_name -> NCloud.NProto.TError
	21, // 10: NCloud.NFileStore.NProto.TResetSessionResponse.Headers:type_name -> NCloud.NFileStore.NProto.TResponseHeaders
	18, // 11: NCloud.NFileStore.NProto.TDestroySessionRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	19, // 12: NCloud.NFileStore.NProto.TDestroySessionResponse.Error:type_name -> NCloud.NProto.TError
	21, // 13: NCloud.NFileStore.NProto.TDestroySessionResponse.Headers:type_name -> NCloud.NFileStore.NProto.TResponseHeaders
	18, // 14: NCloud.NFileStore.NProto.TPingSessionRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	19, // 15: NCloud.NFileStore.NProto.TPingSessionResponse.Error:type_name -> NCloud.NProto.TError
	18, // 16: NCloud.NFileStore.NProto.TSubscribeSessionRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	19, // 17: NCloud.NFileStore.NProto.TSubscribeSessionResponse.Error:type_name -> NCloud.NProto.TError
	18, // 18: NCloud.NFileStore.NProto.TGetSessionEventsRequest.Headers:type_name -> NCloud.NFileStore.NProto.THeaders
	19, // 19: NCloud.NFileStore.NProto.TGetSessionEventsResponse.Error:type_name -> NCloud.NProto.TError
	2,  // 20: NCloud.NFileStore.NProto.TGetSessionEventsResponse.Events:type_name -> NCloud.NFileStore.NProto.TSessionEvent
	21, // 21: NCloud.NFileStore.NProto.TGetSessionEventsResponse.Headers:type_name -> NCloud.NFileStore.NProto.TResponseHeaders
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_cloud_filestore_public_api_protos_session_proto_init() }
func file_cloud_filestore_public_api_protos_session_proto_init() {
	if File_cloud_filestore_public_api_protos_session_proto != nil {
		return
	}
	file_cloud_filestore_public_api_protos_fs_proto_init()
	file_cloud_filestore_public_api_protos_headers_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSessionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCreateSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCreateSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TResetSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TResetSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDestroySessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDestroySessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPingSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPingSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSubscribeSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSubscribeSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetSessionEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetSessionEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSessionEvent_TNodeLinked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSessionEvent_TNodeUnlinked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_filestore_public_api_protos_session_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSessionEvent_TNodeChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_filestore_public_api_protos_session_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_filestore_public_api_protos_session_proto_goTypes,
		DependencyIndexes: file_cloud_filestore_public_api_protos_session_proto_depIdxs,
		EnumInfos:         file_cloud_filestore_public_api_protos_session_proto_enumTypes,
		MessageInfos:      file_cloud_filestore_public_api_protos_session_proto_msgTypes,
	}.Build()
	File_cloud_filestore_public_api_protos_session_proto = out.File
	file_cloud_filestore_public_api_protos_session_proto_rawDesc = nil
	file_cloud_filestore_public_api_protos_session_proto_goTypes = nil
	file_cloud_filestore_public_api_protos_session_proto_depIdxs = nil
}
