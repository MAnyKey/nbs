// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.0
// source: cloud/disk_manager/internal/pkg/types/types.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// These values are stored in DB, do not shuffle them around.
type DiskKind int32

const (
	DiskKind_DISK_KIND_SSD               DiskKind = 0
	DiskKind_DISK_KIND_HDD               DiskKind = 1
	DiskKind_DISK_KIND_SSD_NONREPLICATED DiskKind = 2
	DiskKind_DISK_KIND_SSD_MIRROR2       DiskKind = 3
	DiskKind_DISK_KIND_SSD_LOCAL         DiskKind = 4
	DiskKind_DISK_KIND_SSD_MIRROR3       DiskKind = 5
	DiskKind_DISK_KIND_HDD_NONREPLICATED DiskKind = 6
)

// Enum value maps for DiskKind.
var (
	DiskKind_name = map[int32]string{
		0: "DISK_KIND_SSD",
		1: "DISK_KIND_HDD",
		2: "DISK_KIND_SSD_NONREPLICATED",
		3: "DISK_KIND_SSD_MIRROR2",
		4: "DISK_KIND_SSD_LOCAL",
		5: "DISK_KIND_SSD_MIRROR3",
		6: "DISK_KIND_HDD_NONREPLICATED",
	}
	DiskKind_value = map[string]int32{
		"DISK_KIND_SSD":               0,
		"DISK_KIND_HDD":               1,
		"DISK_KIND_SSD_NONREPLICATED": 2,
		"DISK_KIND_SSD_MIRROR2":       3,
		"DISK_KIND_SSD_LOCAL":         4,
		"DISK_KIND_SSD_MIRROR3":       5,
		"DISK_KIND_HDD_NONREPLICATED": 6,
	}
)

func (x DiskKind) Enum() *DiskKind {
	p := new(DiskKind)
	*p = x
	return p
}

func (x DiskKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiskKind) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_disk_manager_internal_pkg_types_types_proto_enumTypes[0].Descriptor()
}

func (DiskKind) Type() protoreflect.EnumType {
	return &file_cloud_disk_manager_internal_pkg_types_types_proto_enumTypes[0]
}

func (x DiskKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiskKind.Descriptor instead.
func (DiskKind) EnumDescriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescGZIP(), []int{0}
}

// These values are stored in DB, do not shuffle them around.
type PlacementStrategy int32

const (
	PlacementStrategy_PLACEMENT_STRATEGY_SPREAD    PlacementStrategy = 0
	PlacementStrategy_PLACEMENT_STRATEGY_PARTITION PlacementStrategy = 1
)

// Enum value maps for PlacementStrategy.
var (
	PlacementStrategy_name = map[int32]string{
		0: "PLACEMENT_STRATEGY_SPREAD",
		1: "PLACEMENT_STRATEGY_PARTITION",
	}
	PlacementStrategy_value = map[string]int32{
		"PLACEMENT_STRATEGY_SPREAD":    0,
		"PLACEMENT_STRATEGY_PARTITION": 1,
	}
)

func (x PlacementStrategy) Enum() *PlacementStrategy {
	p := new(PlacementStrategy)
	*p = x
	return p
}

func (x PlacementStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlacementStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_disk_manager_internal_pkg_types_types_proto_enumTypes[1].Descriptor()
}

func (PlacementStrategy) Type() protoreflect.EnumType {
	return &file_cloud_disk_manager_internal_pkg_types_types_proto_enumTypes[1]
}

func (x PlacementStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlacementStrategy.Descriptor instead.
func (PlacementStrategy) EnumDescriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescGZIP(), []int{1}
}

type EncryptionMode int32

const (
	EncryptionMode_NO_ENCRYPTION      EncryptionMode = 0
	EncryptionMode_ENCRYPTION_AES_XTS EncryptionMode = 1
)

// Enum value maps for EncryptionMode.
var (
	EncryptionMode_name = map[int32]string{
		0: "NO_ENCRYPTION",
		1: "ENCRYPTION_AES_XTS",
	}
	EncryptionMode_value = map[string]int32{
		"NO_ENCRYPTION":      0,
		"ENCRYPTION_AES_XTS": 1,
	}
)

func (x EncryptionMode) Enum() *EncryptionMode {
	p := new(EncryptionMode)
	*p = x
	return p
}

func (x EncryptionMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncryptionMode) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_disk_manager_internal_pkg_types_types_proto_enumTypes[2].Descriptor()
}

func (EncryptionMode) Type() protoreflect.EnumType {
	return &file_cloud_disk_manager_internal_pkg_types_types_proto_enumTypes[2]
}

func (x EncryptionMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncryptionMode.Descriptor instead.
func (EncryptionMode) EnumDescriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescGZIP(), []int{2}
}

type FilesystemStorageKind int32

const (
	FilesystemStorageKind_FILESYSTEM_STORAGE_KIND_SSD FilesystemStorageKind = 0
	FilesystemStorageKind_FILESYSTEM_STORAGE_KIND_HDD FilesystemStorageKind = 1
)

// Enum value maps for FilesystemStorageKind.
var (
	FilesystemStorageKind_name = map[int32]string{
		0: "FILESYSTEM_STORAGE_KIND_SSD",
		1: "FILESYSTEM_STORAGE_KIND_HDD",
	}
	FilesystemStorageKind_value = map[string]int32{
		"FILESYSTEM_STORAGE_KIND_SSD": 0,
		"FILESYSTEM_STORAGE_KIND_HDD": 1,
	}
)

func (x FilesystemStorageKind) Enum() *FilesystemStorageKind {
	p := new(FilesystemStorageKind)
	*p = x
	return p
}

func (x FilesystemStorageKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilesystemStorageKind) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_disk_manager_internal_pkg_types_types_proto_enumTypes[3].Descriptor()
}

func (FilesystemStorageKind) Type() protoreflect.EnumType {
	return &file_cloud_disk_manager_internal_pkg_types_types_proto_enumTypes[3]
}

func (x FilesystemStorageKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilesystemStorageKind.Descriptor instead.
func (FilesystemStorageKind) EnumDescriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescGZIP(), []int{3}
}

type KmsKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KekId        string `protobuf:"bytes,1,opt,name=KekId,proto3" json:"KekId,omitempty"`
	EncryptedDEK []byte `protobuf:"bytes,2,opt,name=EncryptedDEK,proto3" json:"EncryptedDEK,omitempty"`
	TaskId       string `protobuf:"bytes,3,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
}

func (x *KmsKey) Reset() {
	*x = KmsKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KmsKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KmsKey) ProtoMessage() {}

func (x *KmsKey) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KmsKey.ProtoReflect.Descriptor instead.
func (*KmsKey) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescGZIP(), []int{0}
}

func (x *KmsKey) GetKekId() string {
	if x != nil {
		return x.KekId
	}
	return ""
}

func (x *KmsKey) GetEncryptedDEK() []byte {
	if x != nil {
		return x.EncryptedDEK
	}
	return nil
}

func (x *KmsKey) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type EncryptionDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode EncryptionMode `protobuf:"varint,1,opt,name=Mode,proto3,enum=types.EncryptionMode" json:"Mode,omitempty"`
	// Types that are assignable to Key:
	//
	//	*EncryptionDesc_KeyHash
	//	*EncryptionDesc_KmsKey
	Key isEncryptionDesc_Key `protobuf_oneof:"key"`
}

func (x *EncryptionDesc) Reset() {
	*x = EncryptionDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptionDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionDesc) ProtoMessage() {}

func (x *EncryptionDesc) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionDesc.ProtoReflect.Descriptor instead.
func (*EncryptionDesc) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescGZIP(), []int{1}
}

func (x *EncryptionDesc) GetMode() EncryptionMode {
	if x != nil {
		return x.Mode
	}
	return EncryptionMode_NO_ENCRYPTION
}

func (m *EncryptionDesc) GetKey() isEncryptionDesc_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *EncryptionDesc) GetKeyHash() []byte {
	if x, ok := x.GetKey().(*EncryptionDesc_KeyHash); ok {
		return x.KeyHash
	}
	return nil
}

func (x *EncryptionDesc) GetKmsKey() *KmsKey {
	if x, ok := x.GetKey().(*EncryptionDesc_KmsKey); ok {
		return x.KmsKey
	}
	return nil
}

type isEncryptionDesc_Key interface {
	isEncryptionDesc_Key()
}

type EncryptionDesc_KeyHash struct {
	KeyHash []byte `protobuf:"bytes,2,opt,name=KeyHash,proto3,oneof"`
}

type EncryptionDesc_KmsKey struct {
	KmsKey *KmsKey `protobuf:"bytes,3,opt,name=KmsKey,proto3,oneof"`
}

func (*EncryptionDesc_KeyHash) isEncryptionDesc_Key() {}

func (*EncryptionDesc_KmsKey) isEncryptionDesc_Key() {}

type Disk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId string `protobuf:"bytes,1,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	DiskId string `protobuf:"bytes,2,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
}

func (x *Disk) Reset() {
	*x = Disk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disk) ProtoMessage() {}

func (x *Disk) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disk.ProtoReflect.Descriptor instead.
func (*Disk) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescGZIP(), []int{2}
}

func (x *Disk) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *Disk) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

type DiskPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId   string `protobuf:"bytes,1,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	Capacity uint32 `protobuf:"varint,2,opt,name=Capacity,proto3" json:"Capacity,omitempty"`
}

func (x *DiskPool) Reset() {
	*x = DiskPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskPool) ProtoMessage() {}

func (x *DiskPool) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskPool.ProtoReflect.Descriptor instead.
func (*DiskPool) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescGZIP(), []int{3}
}

func (x *DiskPool) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *DiskPool) GetCapacity() uint32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

var File_cloud_disk_manager_internal_pkg_types_types_proto protoreflect.FileDescriptor

var file_cloud_disk_manager_internal_pkg_types_types_proto_rawDesc = []byte{
	0x0a, 0x31, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x06, 0x4b, 0x6d,
	0x73, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x4b, 0x65, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x4b, 0x65, 0x6b, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x45, 0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x45, 0x4b, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x12, 0x29, 0x0a, 0x04, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x27, 0x0a, 0x06, 0x4b, 0x6d, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4b, 0x6d, 0x73, 0x4b, 0x65, 0x79, 0x48,
	0x00, 0x52, 0x06, 0x4b, 0x6d, 0x73, 0x4b, 0x65, 0x79, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x36, 0x0a, 0x04, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x5a, 0x6f, 0x6e, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x6b,
	0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2a, 0xc1, 0x01, 0x0a, 0x08, 0x44, 0x69, 0x73,
	0x6b, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x49, 0x53, 0x4b, 0x5f, 0x4b, 0x49,
	0x4e, 0x44, 0x5f, 0x53, 0x53, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x49, 0x53, 0x4b,
	0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x48, 0x44, 0x44, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x44,
	0x49, 0x53, 0x4b, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x53, 0x53, 0x44, 0x5f, 0x4e, 0x4f, 0x4e,
	0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15,
	0x44, 0x49, 0x53, 0x4b, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x53, 0x53, 0x44, 0x5f, 0x4d, 0x49,
	0x52, 0x52, 0x4f, 0x52, 0x32, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x49, 0x53, 0x4b, 0x5f,
	0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x53, 0x53, 0x44, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x04,
	0x12, 0x19, 0x0a, 0x15, 0x44, 0x49, 0x53, 0x4b, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x53, 0x53,
	0x44, 0x5f, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x33, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x44,
	0x49, 0x53, 0x4b, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x48, 0x44, 0x44, 0x5f, 0x4e, 0x4f, 0x4e,
	0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x06, 0x2a, 0x54, 0x0a, 0x11,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x53, 0x50, 0x52, 0x45, 0x41, 0x44, 0x10, 0x00,
	0x12, 0x20, 0x0a, 0x1c, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x01, 0x2a, 0x3b, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59,
	0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x4e, 0x43, 0x52, 0x59,
	0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x45, 0x53, 0x5f, 0x58, 0x54, 0x53, 0x10, 0x01, 0x2a,
	0x59, 0x0a, 0x15, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x49, 0x4c, 0x45,
	0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x4b,
	0x49, 0x4e, 0x44, 0x5f, 0x53, 0x53, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x49, 0x4c,
	0x45, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f,
	0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x48, 0x44, 0x44, 0x10, 0x01, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6e, 0x62, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescOnce sync.Once
	file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescData = file_cloud_disk_manager_internal_pkg_types_types_proto_rawDesc
)

func file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescGZIP() []byte {
	file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescOnce.Do(func() {
		file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescData)
	})
	return file_cloud_disk_manager_internal_pkg_types_types_proto_rawDescData
}

var file_cloud_disk_manager_internal_pkg_types_types_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cloud_disk_manager_internal_pkg_types_types_proto_goTypes = []interface{}{
	(DiskKind)(0),              // 0: types.DiskKind
	(PlacementStrategy)(0),     // 1: types.PlacementStrategy
	(EncryptionMode)(0),        // 2: types.EncryptionMode
	(FilesystemStorageKind)(0), // 3: types.FilesystemStorageKind
	(*KmsKey)(nil),             // 4: types.KmsKey
	(*EncryptionDesc)(nil),     // 5: types.EncryptionDesc
	(*Disk)(nil),               // 6: types.Disk
	(*DiskPool)(nil),           // 7: types.DiskPool
}
var file_cloud_disk_manager_internal_pkg_types_types_proto_depIdxs = []int32{
	2, // 0: types.EncryptionDesc.Mode:type_name -> types.EncryptionMode
	4, // 1: types.EncryptionDesc.KmsKey:type_name -> types.KmsKey
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_cloud_disk_manager_internal_pkg_types_types_proto_init() }
func file_cloud_disk_manager_internal_pkg_types_types_proto_init() {
	if File_cloud_disk_manager_internal_pkg_types_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KmsKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptionDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Disk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*EncryptionDesc_KeyHash)(nil),
		(*EncryptionDesc_KmsKey)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_disk_manager_internal_pkg_types_types_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_disk_manager_internal_pkg_types_types_proto_goTypes,
		DependencyIndexes: file_cloud_disk_manager_internal_pkg_types_types_proto_depIdxs,
		EnumInfos:         file_cloud_disk_manager_internal_pkg_types_types_proto_enumTypes,
		MessageInfos:      file_cloud_disk_manager_internal_pkg_types_types_proto_msgTypes,
	}.Build()
	File_cloud_disk_manager_internal_pkg_types_types_proto = out.File
	file_cloud_disk_manager_internal_pkg_types_types_proto_rawDesc = nil
	file_cloud_disk_manager_internal_pkg_types_types_proto_goTypes = nil
	file_cloud_disk_manager_internal_pkg_types_types_proto_depIdxs = nil
}
