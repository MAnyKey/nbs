// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.0
// source: cloud/disk_manager/internal/pkg/dataplane/protos/replicate_disk_task.proto

package protos

import (
	types "github.com/ydb-platform/nbs/cloud/disk_manager/internal/pkg/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplicateDiskTaskEvents int32

const (
	ReplicateDiskTaskEvents_FINISH_REPLICATION ReplicateDiskTaskEvents = 0
)

// Enum value maps for ReplicateDiskTaskEvents.
var (
	ReplicateDiskTaskEvents_name = map[int32]string{
		0: "FINISH_REPLICATION",
	}
	ReplicateDiskTaskEvents_value = map[string]int32{
		"FINISH_REPLICATION": 0,
	}
)

func (x ReplicateDiskTaskEvents) Enum() *ReplicateDiskTaskEvents {
	p := new(ReplicateDiskTaskEvents)
	*p = x
	return p
}

func (x ReplicateDiskTaskEvents) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplicateDiskTaskEvents) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_enumTypes[0].Descriptor()
}

func (ReplicateDiskTaskEvents) Type() protoreflect.EnumType {
	return &file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_enumTypes[0]
}

func (x ReplicateDiskTaskEvents) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplicateDiskTaskEvents.Descriptor instead.
func (ReplicateDiskTaskEvents) EnumDescriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDescGZIP(), []int{0}
}

type ReplicateDiskTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcDisk            *types.Disk `protobuf:"bytes,1,opt,name=SrcDisk,proto3" json:"SrcDisk,omitempty"`
	DstDisk            *types.Disk `protobuf:"bytes,2,opt,name=DstDisk,proto3" json:"DstDisk,omitempty"`
	FillGeneration     uint64      `protobuf:"varint,3,opt,name=FillGeneration,proto3" json:"FillGeneration,omitempty"`
	UseLightCheckpoint bool        `protobuf:"varint,4,opt,name=UseLightCheckpoint,proto3" json:"UseLightCheckpoint,omitempty"` // Use light or withoutData checkpoint.
	IgnoreBaseDisk     bool        `protobuf:"varint,5,opt,name=IgnoreBaseDisk,proto3" json:"IgnoreBaseDisk,omitempty"`
}

func (x *ReplicateDiskTaskRequest) Reset() {
	*x = ReplicateDiskTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicateDiskTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateDiskTaskRequest) ProtoMessage() {}

func (x *ReplicateDiskTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateDiskTaskRequest.ProtoReflect.Descriptor instead.
func (*ReplicateDiskTaskRequest) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDescGZIP(), []int{0}
}

func (x *ReplicateDiskTaskRequest) GetSrcDisk() *types.Disk {
	if x != nil {
		return x.SrcDisk
	}
	return nil
}

func (x *ReplicateDiskTaskRequest) GetDstDisk() *types.Disk {
	if x != nil {
		return x.DstDisk
	}
	return nil
}

func (x *ReplicateDiskTaskRequest) GetFillGeneration() uint64 {
	if x != nil {
		return x.FillGeneration
	}
	return 0
}

func (x *ReplicateDiskTaskRequest) GetUseLightCheckpoint() bool {
	if x != nil {
		return x.UseLightCheckpoint
	}
	return false
}

func (x *ReplicateDiskTaskRequest) GetIgnoreBaseDisk() bool {
	if x != nil {
		return x.IgnoreBaseDisk
	}
	return false
}

type ReplicateDiskTaskState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FillSeqNumber       uint64                 `protobuf:"varint,1,opt,name=FillSeqNumber,proto3" json:"FillSeqNumber,omitempty"`
	Iteration           uint32                 `protobuf:"varint,2,opt,name=Iteration,proto3" json:"Iteration,omitempty"`
	FinalIteration      uint32                 `protobuf:"varint,3,opt,name=FinalIteration,proto3" json:"FinalIteration,omitempty"`
	ChunkCount          uint32                 `protobuf:"varint,4,opt,name=ChunkCount,proto3" json:"ChunkCount,omitempty"`
	MilestoneChunkIndex uint32                 `protobuf:"varint,5,opt,name=MilestoneChunkIndex,proto3" json:"MilestoneChunkIndex,omitempty"`
	Progress            float64                `protobuf:"fixed64,6,opt,name=Progress,proto3" json:"Progress,omitempty"`
	SecondsRemaining    int64                  `protobuf:"varint,7,opt,name=SecondsRemaining,proto3" json:"SecondsRemaining,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// Store SecondsRemaining each UselessReplicationIterationsBeforeAbort.
	// If SecondsRemaining degrades, abort replication.
	MeasuredSecondsRemaining int64 `protobuf:"varint,9,opt,name=MeasuredSecondsRemaining,proto3" json:"MeasuredSecondsRemaining,omitempty"`
}

func (x *ReplicateDiskTaskState) Reset() {
	*x = ReplicateDiskTaskState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicateDiskTaskState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateDiskTaskState) ProtoMessage() {}

func (x *ReplicateDiskTaskState) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateDiskTaskState.ProtoReflect.Descriptor instead.
func (*ReplicateDiskTaskState) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDescGZIP(), []int{1}
}

func (x *ReplicateDiskTaskState) GetFillSeqNumber() uint64 {
	if x != nil {
		return x.FillSeqNumber
	}
	return 0
}

func (x *ReplicateDiskTaskState) GetIteration() uint32 {
	if x != nil {
		return x.Iteration
	}
	return 0
}

func (x *ReplicateDiskTaskState) GetFinalIteration() uint32 {
	if x != nil {
		return x.FinalIteration
	}
	return 0
}

func (x *ReplicateDiskTaskState) GetChunkCount() uint32 {
	if x != nil {
		return x.ChunkCount
	}
	return 0
}

func (x *ReplicateDiskTaskState) GetMilestoneChunkIndex() uint32 {
	if x != nil {
		return x.MilestoneChunkIndex
	}
	return 0
}

func (x *ReplicateDiskTaskState) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *ReplicateDiskTaskState) GetSecondsRemaining() int64 {
	if x != nil {
		return x.SecondsRemaining
	}
	return 0
}

func (x *ReplicateDiskTaskState) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ReplicateDiskTaskState) GetMeasuredSecondsRemaining() int64 {
	if x != nil {
		return x.MeasuredSecondsRemaining
	}
	return 0
}

type ReplicateDiskTaskMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress         float64                `protobuf:"fixed64,1,opt,name=Progress,proto3" json:"Progress,omitempty"`
	SecondsRemaining int64                  `protobuf:"varint,2,opt,name=SecondsRemaining,proto3" json:"SecondsRemaining,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *ReplicateDiskTaskMetadata) Reset() {
	*x = ReplicateDiskTaskMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicateDiskTaskMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateDiskTaskMetadata) ProtoMessage() {}

func (x *ReplicateDiskTaskMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateDiskTaskMetadata.ProtoReflect.Descriptor instead.
func (*ReplicateDiskTaskMetadata) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDescGZIP(), []int{2}
}

func (x *ReplicateDiskTaskMetadata) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *ReplicateDiskTaskMetadata) GetSecondsRemaining() int64 {
	if x != nil {
		return x.SecondsRemaining
	}
	return 0
}

func (x *ReplicateDiskTaskMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto protoreflect.FileDescriptor

var file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDesc = []byte{
	0x0a, 0x4a, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x73,
	0x6b, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x01, 0x0a, 0x18,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x53, 0x72, 0x63, 0x44,
	0x69, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x07, 0x53, 0x72, 0x63, 0x44, 0x69, 0x73, 0x6b, 0x12,
	0x25, 0x0a, 0x07, 0x44, 0x73, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x07, 0x44,
	0x73, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x6c, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x46, 0x69, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e,
	0x0a, 0x12, 0x55, 0x73, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x55, 0x73, 0x65, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65, 0x44, 0x69, 0x73, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x22, 0x94, 0x03, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x71, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x46, 0x69, 0x6c, 0x6c, 0x53, 0x65,
	0x71, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x4d, 0x69, 0x6c, 0x65,
	0x73, 0x74, 0x6f, 0x6e, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x3a, 0x0a, 0x18, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x64, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x18, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x64, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x9d, 0x01,
	0x0a, 0x19, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x54,
	0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x31, 0x0a,
	0x17, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x54, 0x61,
	0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x49, 0x4e, 0x49,
	0x53, 0x48, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00,
	0x42, 0x4e, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79,
	0x64, 0x62, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6e, 0x62, 0x73, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDescOnce sync.Once
	file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDescData = file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDesc
)

func file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDescGZIP() []byte {
	file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDescOnce.Do(func() {
		file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDescData)
	})
	return file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDescData
}

var file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_goTypes = []interface{}{
	(ReplicateDiskTaskEvents)(0),      // 0: dataplane.ReplicateDiskTaskEvents
	(*ReplicateDiskTaskRequest)(nil),  // 1: dataplane.ReplicateDiskTaskRequest
	(*ReplicateDiskTaskState)(nil),    // 2: dataplane.ReplicateDiskTaskState
	(*ReplicateDiskTaskMetadata)(nil), // 3: dataplane.ReplicateDiskTaskMetadata
	(*types.Disk)(nil),                // 4: types.Disk
	(*timestamppb.Timestamp)(nil),     // 5: google.protobuf.Timestamp
}
var file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_depIdxs = []int32{
	4, // 0: dataplane.ReplicateDiskTaskRequest.SrcDisk:type_name -> types.Disk
	4, // 1: dataplane.ReplicateDiskTaskRequest.DstDisk:type_name -> types.Disk
	5, // 2: dataplane.ReplicateDiskTaskState.UpdatedAt:type_name -> google.protobuf.Timestamp
	5, // 3: dataplane.ReplicateDiskTaskMetadata.UpdatedAt:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_init() }
func file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_init() {
	if File_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicateDiskTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicateDiskTaskState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicateDiskTaskMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_goTypes,
		DependencyIndexes: file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_depIdxs,
		EnumInfos:         file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_enumTypes,
		MessageInfos:      file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_msgTypes,
	}.Build()
	File_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto = out.File
	file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_rawDesc = nil
	file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_goTypes = nil
	file_cloud_disk_manager_internal_pkg_dataplane_protos_replicate_disk_task_proto_depIdxs = nil
}
