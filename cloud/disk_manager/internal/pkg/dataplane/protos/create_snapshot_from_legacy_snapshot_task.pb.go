// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.0
// source: cloud/disk_manager/internal/pkg/dataplane/protos/create_snapshot_from_legacy_snapshot_task.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSnapshotFromLegacySnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcSnapshotId string `protobuf:"bytes,1,opt,name=SrcSnapshotId,proto3" json:"SrcSnapshotId,omitempty"`
	DstSnapshotId string `protobuf:"bytes,2,opt,name=DstSnapshotId,proto3" json:"DstSnapshotId,omitempty"`
	UseS3         bool   `protobuf:"varint,3,opt,name=UseS3,proto3" json:"UseS3,omitempty"`
}

func (x *CreateSnapshotFromLegacySnapshotRequest) Reset() {
	*x = CreateSnapshotFromLegacySnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotFromLegacySnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotFromLegacySnapshotRequest) ProtoMessage() {}

func (x *CreateSnapshotFromLegacySnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotFromLegacySnapshotRequest.ProtoReflect.Descriptor instead.
func (*CreateSnapshotFromLegacySnapshotRequest) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSnapshotFromLegacySnapshotRequest) GetSrcSnapshotId() string {
	if x != nil {
		return x.SrcSnapshotId
	}
	return ""
}

func (x *CreateSnapshotFromLegacySnapshotRequest) GetDstSnapshotId() string {
	if x != nil {
		return x.DstSnapshotId
	}
	return ""
}

func (x *CreateSnapshotFromLegacySnapshotRequest) GetUseS3() bool {
	if x != nil {
		return x.UseS3
	}
	return false
}

type CreateSnapshotFromLegacySnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotSize        uint64 `protobuf:"varint,1,opt,name=SnapshotSize,proto3" json:"SnapshotSize,omitempty"`
	SnapshotStorageSize uint64 `protobuf:"varint,2,opt,name=SnapshotStorageSize,proto3" json:"SnapshotStorageSize,omitempty"`
	TransferredDataSize uint64 `protobuf:"varint,3,opt,name=TransferredDataSize,proto3" json:"TransferredDataSize,omitempty"`
}

func (x *CreateSnapshotFromLegacySnapshotResponse) Reset() {
	*x = CreateSnapshotFromLegacySnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotFromLegacySnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotFromLegacySnapshotResponse) ProtoMessage() {}

func (x *CreateSnapshotFromLegacySnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotFromLegacySnapshotResponse.ProtoReflect.Descriptor instead.
func (*CreateSnapshotFromLegacySnapshotResponse) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSnapshotFromLegacySnapshotResponse) GetSnapshotSize() uint64 {
	if x != nil {
		return x.SnapshotSize
	}
	return 0
}

func (x *CreateSnapshotFromLegacySnapshotResponse) GetSnapshotStorageSize() uint64 {
	if x != nil {
		return x.SnapshotStorageSize
	}
	return 0
}

func (x *CreateSnapshotFromLegacySnapshotResponse) GetTransferredDataSize() uint64 {
	if x != nil {
		return x.TransferredDataSize
	}
	return 0
}

type CreateSnapshotFromLegacySnapshotTaskState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MilestoneChunkIndex   uint32  `protobuf:"varint,2,opt,name=MilestoneChunkIndex,proto3" json:"MilestoneChunkIndex,omitempty"`
	TransferredChunkCount uint32  `protobuf:"varint,8,opt,name=TransferredChunkCount,proto3" json:"TransferredChunkCount,omitempty"`
	Progress              float64 `protobuf:"fixed64,6,opt,name=Progress,proto3" json:"Progress,omitempty"`
	SnapshotSize          uint64  `protobuf:"varint,3,opt,name=SnapshotSize,proto3" json:"SnapshotSize,omitempty"`
	SnapshotStorageSize   uint64  `protobuf:"varint,4,opt,name=SnapshotStorageSize,proto3" json:"SnapshotStorageSize,omitempty"`
	ChunkCount            uint32  `protobuf:"varint,5,opt,name=ChunkCount,proto3" json:"ChunkCount,omitempty"`
	TransferredDataSize   uint64  `protobuf:"varint,7,opt,name=TransferredDataSize,proto3" json:"TransferredDataSize,omitempty"`
}

func (x *CreateSnapshotFromLegacySnapshotTaskState) Reset() {
	*x = CreateSnapshotFromLegacySnapshotTaskState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotFromLegacySnapshotTaskState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotFromLegacySnapshotTaskState) ProtoMessage() {}

func (x *CreateSnapshotFromLegacySnapshotTaskState) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotFromLegacySnapshotTaskState.ProtoReflect.Descriptor instead.
func (*CreateSnapshotFromLegacySnapshotTaskState) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSnapshotFromLegacySnapshotTaskState) GetMilestoneChunkIndex() uint32 {
	if x != nil {
		return x.MilestoneChunkIndex
	}
	return 0
}

func (x *CreateSnapshotFromLegacySnapshotTaskState) GetTransferredChunkCount() uint32 {
	if x != nil {
		return x.TransferredChunkCount
	}
	return 0
}

func (x *CreateSnapshotFromLegacySnapshotTaskState) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *CreateSnapshotFromLegacySnapshotTaskState) GetSnapshotSize() uint64 {
	if x != nil {
		return x.SnapshotSize
	}
	return 0
}

func (x *CreateSnapshotFromLegacySnapshotTaskState) GetSnapshotStorageSize() uint64 {
	if x != nil {
		return x.SnapshotStorageSize
	}
	return 0
}

func (x *CreateSnapshotFromLegacySnapshotTaskState) GetChunkCount() uint32 {
	if x != nil {
		return x.ChunkCount
	}
	return 0
}

func (x *CreateSnapshotFromLegacySnapshotTaskState) GetTransferredDataSize() uint64 {
	if x != nil {
		return x.TransferredDataSize
	}
	return 0
}

type CreateSnapshotFromLegacySnapshotMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress float64 `protobuf:"fixed64,1,opt,name=Progress,proto3" json:"Progress,omitempty"`
}

func (x *CreateSnapshotFromLegacySnapshotMetadata) Reset() {
	*x = CreateSnapshotFromLegacySnapshotMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotFromLegacySnapshotMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotFromLegacySnapshotMetadata) ProtoMessage() {}

func (x *CreateSnapshotFromLegacySnapshotMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotFromLegacySnapshotMetadata.ProtoReflect.Descriptor instead.
func (*CreateSnapshotFromLegacySnapshotMetadata) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSnapshotFromLegacySnapshotMetadata) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

var File_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto protoreflect.FileDescriptor

var file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDesc = []byte{
	0x0a, 0x60, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x22, 0x8b, 0x01,
	0x0a, 0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x72, 0x63,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x53, 0x72, 0x63, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x44, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x53, 0x33, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x55, 0x73, 0x65, 0x53, 0x33, 0x22, 0xb2, 0x01, 0x0a, 0x28,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x30,
	0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0xd7, 0x02, 0x0a, 0x29, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x30,
	0x0a, 0x13, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x4d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x34, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x13, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x46, 0x0a, 0x28, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x4e, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x79, 0x64, 0x62, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6e, 0x62,
	0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDescOnce sync.Once
	file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDescData = file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDesc
)

func file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDescGZIP() []byte {
	file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDescOnce.Do(func() {
		file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDescData)
	})
	return file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDescData
}

var file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_goTypes = []interface{}{
	(*CreateSnapshotFromLegacySnapshotRequest)(nil),   // 0: dataplane.CreateSnapshotFromLegacySnapshotRequest
	(*CreateSnapshotFromLegacySnapshotResponse)(nil),  // 1: dataplane.CreateSnapshotFromLegacySnapshotResponse
	(*CreateSnapshotFromLegacySnapshotTaskState)(nil), // 2: dataplane.CreateSnapshotFromLegacySnapshotTaskState
	(*CreateSnapshotFromLegacySnapshotMetadata)(nil),  // 3: dataplane.CreateSnapshotFromLegacySnapshotMetadata
}
var file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() {
	file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_init()
}
func file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_init() {
	if File_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotFromLegacySnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotFromLegacySnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotFromLegacySnapshotTaskState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotFromLegacySnapshotMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_goTypes,
		DependencyIndexes: file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_depIdxs,
		MessageInfos:      file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_msgTypes,
	}.Build()
	File_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto = out.File
	file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_rawDesc = nil
	file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_goTypes = nil
	file_cloud_disk_manager_internal_pkg_dataplane_protos_create_snapshot_from_legacy_snapshot_task_proto_depIdxs = nil
}
