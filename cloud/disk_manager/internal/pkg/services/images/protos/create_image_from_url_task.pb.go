// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.0
// source: cloud/disk_manager/internal/pkg/services/images/protos/create_image_from_url_task.proto

package protos

import (
	types "github.com/ydb-platform/nbs/cloud/disk_manager/internal/pkg/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateImageFromURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcURL                                string            `protobuf:"bytes,1,opt,name=SrcURL,proto3" json:"SrcURL,omitempty"`
	DstImageId                            string            `protobuf:"bytes,3,opt,name=DstImageId,proto3" json:"DstImageId,omitempty"`
	FolderId                              string            `protobuf:"bytes,4,opt,name=FolderId,proto3" json:"FolderId,omitempty"`
	DiskPools                             []*types.DiskPool `protobuf:"bytes,5,rep,name=DiskPools,proto3" json:"DiskPools,omitempty"`
	OperationCloudId                      string            `protobuf:"bytes,6,opt,name=OperationCloudId,proto3" json:"OperationCloudId,omitempty"`
	OperationFolderId                     string            `protobuf:"bytes,7,opt,name=OperationFolderId,proto3" json:"OperationFolderId,omitempty"`
	UseDataplaneTasks                     bool              `protobuf:"varint,8,opt,name=UseDataplaneTasks,proto3" json:"UseDataplaneTasks,omitempty"`
	UseDataplaneTasksSupportedFormatsOnly bool              `protobuf:"varint,9,opt,name=UseDataplaneTasksSupportedFormatsOnly,proto3" json:"UseDataplaneTasksSupportedFormatsOnly,omitempty"`
	UseS3                                 bool              `protobuf:"varint,10,opt,name=UseS3,proto3" json:"UseS3,omitempty"`
	UseDataplaneTasksForVMDK              bool              `protobuf:"varint,11,opt,name=UseDataplaneTasksForVMDK,proto3" json:"UseDataplaneTasksForVMDK,omitempty"`
}

func (x *CreateImageFromURLRequest) Reset() {
	*x = CreateImageFromURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageFromURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageFromURLRequest) ProtoMessage() {}

func (x *CreateImageFromURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageFromURLRequest.ProtoReflect.Descriptor instead.
func (*CreateImageFromURLRequest) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDescGZIP(), []int{0}
}

func (x *CreateImageFromURLRequest) GetSrcURL() string {
	if x != nil {
		return x.SrcURL
	}
	return ""
}

func (x *CreateImageFromURLRequest) GetDstImageId() string {
	if x != nil {
		return x.DstImageId
	}
	return ""
}

func (x *CreateImageFromURLRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CreateImageFromURLRequest) GetDiskPools() []*types.DiskPool {
	if x != nil {
		return x.DiskPools
	}
	return nil
}

func (x *CreateImageFromURLRequest) GetOperationCloudId() string {
	if x != nil {
		return x.OperationCloudId
	}
	return ""
}

func (x *CreateImageFromURLRequest) GetOperationFolderId() string {
	if x != nil {
		return x.OperationFolderId
	}
	return ""
}

func (x *CreateImageFromURLRequest) GetUseDataplaneTasks() bool {
	if x != nil {
		return x.UseDataplaneTasks
	}
	return false
}

func (x *CreateImageFromURLRequest) GetUseDataplaneTasksSupportedFormatsOnly() bool {
	if x != nil {
		return x.UseDataplaneTasksSupportedFormatsOnly
	}
	return false
}

func (x *CreateImageFromURLRequest) GetUseS3() bool {
	if x != nil {
		return x.UseS3
	}
	return false
}

func (x *CreateImageFromURLRequest) GetUseDataplaneTasksForVMDK() bool {
	if x != nil {
		return x.UseDataplaneTasksForVMDK
	}
	return false
}

type CreateImageFromURLTaskState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset           int64   `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Progress         float64 `protobuf:"fixed64,3,opt,name=Progress,proto3" json:"Progress,omitempty"`
	ImageSize        int64   `protobuf:"varint,4,opt,name=ImageSize,proto3" json:"ImageSize,omitempty"`
	ImageStorageSize int64   `protobuf:"varint,5,opt,name=ImageStorageSize,proto3" json:"ImageStorageSize,omitempty"`
	DataplaneTaskID  string  `protobuf:"bytes,6,opt,name=DataplaneTaskID,proto3" json:"DataplaneTaskID,omitempty"`
	ImageFormat      *string `protobuf:"bytes,8,opt,name=ImageFormat,proto3,oneof" json:"ImageFormat,omitempty"`
}

func (x *CreateImageFromURLTaskState) Reset() {
	*x = CreateImageFromURLTaskState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageFromURLTaskState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageFromURLTaskState) ProtoMessage() {}

func (x *CreateImageFromURLTaskState) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageFromURLTaskState.ProtoReflect.Descriptor instead.
func (*CreateImageFromURLTaskState) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDescGZIP(), []int{1}
}

func (x *CreateImageFromURLTaskState) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CreateImageFromURLTaskState) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *CreateImageFromURLTaskState) GetImageSize() int64 {
	if x != nil {
		return x.ImageSize
	}
	return 0
}

func (x *CreateImageFromURLTaskState) GetImageStorageSize() int64 {
	if x != nil {
		return x.ImageStorageSize
	}
	return 0
}

func (x *CreateImageFromURLTaskState) GetDataplaneTaskID() string {
	if x != nil {
		return x.DataplaneTaskID
	}
	return ""
}

func (x *CreateImageFromURLTaskState) GetImageFormat() string {
	if x != nil && x.ImageFormat != nil {
		return *x.ImageFormat
	}
	return ""
}

var File_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto protoreflect.FileDescriptor

var file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDesc = []byte{
	0x0a, 0x57, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x1a, 0x31, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x03, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x72, 0x63, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x72, 0x63, 0x55, 0x52, 0x4c, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x73,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x44, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x6b, 0x50, 0x6f,
	0x6f, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x09, 0x44, 0x69, 0x73, 0x6b,
	0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x55, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x54, 0x0a,
	0x25, 0x55, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x25, 0x55, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x53, 0x33, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x55, 0x73, 0x65, 0x53, 0x33, 0x12, 0x3a, 0x0a, 0x18, 0x55, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x46, 0x6f,
	0x72, 0x56, 0x4d, 0x44, 0x4b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x55, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x46, 0x6f,
	0x72, 0x56, 0x4d, 0x44, 0x4b, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x82, 0x02, 0x0a, 0x1b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x55,
	0x52, 0x4c, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08,
	0x42, 0x54, 0x5a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79,
	0x64, 0x62, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6e, 0x62, 0x73, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDescOnce sync.Once
	file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDescData = file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDesc
)

func file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDescGZIP() []byte {
	file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDescOnce.Do(func() {
		file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDescData)
	})
	return file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDescData
}

var file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_goTypes = []interface{}{
	(*CreateImageFromURLRequest)(nil),   // 0: images.CreateImageFromURLRequest
	(*CreateImageFromURLTaskState)(nil), // 1: images.CreateImageFromURLTaskState
	(*types.DiskPool)(nil),              // 2: types.DiskPool
}
var file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_depIdxs = []int32{
	2, // 0: images.CreateImageFromURLRequest.DiskPools:type_name -> types.DiskPool
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() {
	file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_init()
}
func file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_init() {
	if File_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageFromURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageFromURLTaskState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_goTypes,
		DependencyIndexes: file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_depIdxs,
		MessageInfos:      file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_msgTypes,
	}.Build()
	File_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto = out.File
	file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_rawDesc = nil
	file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_goTypes = nil
	file_cloud_disk_manager_internal_pkg_services_images_protos_create_image_from_url_task_proto_depIdxs = nil
}
