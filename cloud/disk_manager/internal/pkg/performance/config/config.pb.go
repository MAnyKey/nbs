// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.0
// source: cloud/disk_manager/internal/pkg/performance/config/config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PerformanceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateDiskFromImageBandwidthMiBs     *uint64 `protobuf:"varint,1,opt,name=CreateDiskFromImageBandwidthMiBs,def=300" json:"CreateDiskFromImageBandwidthMiBs,omitempty"`
	CreateDiskFromSnapshotBandwidthMiBs  *uint64 `protobuf:"varint,2,opt,name=CreateDiskFromSnapshotBandwidthMiBs,def=300" json:"CreateDiskFromSnapshotBandwidthMiBs,omitempty"`
	CreateImageFromDiskBandwidthMiBs     *uint64 `protobuf:"varint,3,opt,name=CreateImageFromDiskBandwidthMiBs,def=200" json:"CreateImageFromDiskBandwidthMiBs,omitempty"`
	CreateImageFromImageBandwidthMiBs    *uint64 `protobuf:"varint,4,opt,name=CreateImageFromImageBandwidthMiBs,def=3000" json:"CreateImageFromImageBandwidthMiBs,omitempty"`
	CreateImageFromSnapshotBandwidthMiBs *uint64 `protobuf:"varint,5,opt,name=CreateImageFromSnapshotBandwidthMiBs,def=3000" json:"CreateImageFromSnapshotBandwidthMiBs,omitempty"`
	CreateImageFromURLBandwidthMiBs      *uint64 `protobuf:"varint,6,opt,name=CreateImageFromURLBandwidthMiBs,def=200" json:"CreateImageFromURLBandwidthMiBs,omitempty"`
	CreateSnapshotFromDiskBandwidthMiBs  *uint64 `protobuf:"varint,7,opt,name=CreateSnapshotFromDiskBandwidthMiBs,def=200" json:"CreateSnapshotFromDiskBandwidthMiBs,omitempty"`
	ReplicateDiskBandwidthMiBs           *uint64 `protobuf:"varint,8,opt,name=ReplicateDiskBandwidthMiBs,def=200" json:"ReplicateDiskBandwidthMiBs,omitempty"`
}

// Default values for PerformanceConfig fields.
const (
	Default_PerformanceConfig_CreateDiskFromImageBandwidthMiBs     = uint64(300)
	Default_PerformanceConfig_CreateDiskFromSnapshotBandwidthMiBs  = uint64(300)
	Default_PerformanceConfig_CreateImageFromDiskBandwidthMiBs     = uint64(200)
	Default_PerformanceConfig_CreateImageFromImageBandwidthMiBs    = uint64(3000)
	Default_PerformanceConfig_CreateImageFromSnapshotBandwidthMiBs = uint64(3000)
	Default_PerformanceConfig_CreateImageFromURLBandwidthMiBs      = uint64(200)
	Default_PerformanceConfig_CreateSnapshotFromDiskBandwidthMiBs  = uint64(200)
	Default_PerformanceConfig_ReplicateDiskBandwidthMiBs           = uint64(200)
)

func (x *PerformanceConfig) Reset() {
	*x = PerformanceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_manager_internal_pkg_performance_config_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceConfig) ProtoMessage() {}

func (x *PerformanceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_manager_internal_pkg_performance_config_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceConfig.ProtoReflect.Descriptor instead.
func (*PerformanceConfig) Descriptor() ([]byte, []int) {
	return file_cloud_disk_manager_internal_pkg_performance_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *PerformanceConfig) GetCreateDiskFromImageBandwidthMiBs() uint64 {
	if x != nil && x.CreateDiskFromImageBandwidthMiBs != nil {
		return *x.CreateDiskFromImageBandwidthMiBs
	}
	return Default_PerformanceConfig_CreateDiskFromImageBandwidthMiBs
}

func (x *PerformanceConfig) GetCreateDiskFromSnapshotBandwidthMiBs() uint64 {
	if x != nil && x.CreateDiskFromSnapshotBandwidthMiBs != nil {
		return *x.CreateDiskFromSnapshotBandwidthMiBs
	}
	return Default_PerformanceConfig_CreateDiskFromSnapshotBandwidthMiBs
}

func (x *PerformanceConfig) GetCreateImageFromDiskBandwidthMiBs() uint64 {
	if x != nil && x.CreateImageFromDiskBandwidthMiBs != nil {
		return *x.CreateImageFromDiskBandwidthMiBs
	}
	return Default_PerformanceConfig_CreateImageFromDiskBandwidthMiBs
}

func (x *PerformanceConfig) GetCreateImageFromImageBandwidthMiBs() uint64 {
	if x != nil && x.CreateImageFromImageBandwidthMiBs != nil {
		return *x.CreateImageFromImageBandwidthMiBs
	}
	return Default_PerformanceConfig_CreateImageFromImageBandwidthMiBs
}

func (x *PerformanceConfig) GetCreateImageFromSnapshotBandwidthMiBs() uint64 {
	if x != nil && x.CreateImageFromSnapshotBandwidthMiBs != nil {
		return *x.CreateImageFromSnapshotBandwidthMiBs
	}
	return Default_PerformanceConfig_CreateImageFromSnapshotBandwidthMiBs
}

func (x *PerformanceConfig) GetCreateImageFromURLBandwidthMiBs() uint64 {
	if x != nil && x.CreateImageFromURLBandwidthMiBs != nil {
		return *x.CreateImageFromURLBandwidthMiBs
	}
	return Default_PerformanceConfig_CreateImageFromURLBandwidthMiBs
}

func (x *PerformanceConfig) GetCreateSnapshotFromDiskBandwidthMiBs() uint64 {
	if x != nil && x.CreateSnapshotFromDiskBandwidthMiBs != nil {
		return *x.CreateSnapshotFromDiskBandwidthMiBs
	}
	return Default_PerformanceConfig_CreateSnapshotFromDiskBandwidthMiBs
}

func (x *PerformanceConfig) GetReplicateDiskBandwidthMiBs() uint64 {
	if x != nil && x.ReplicateDiskBandwidthMiBs != nil {
		return *x.ReplicateDiskBandwidthMiBs
	}
	return Default_PerformanceConfig_ReplicateDiskBandwidthMiBs
}

var File_cloud_disk_manager_internal_pkg_performance_config_config_proto protoreflect.FileDescriptor

var file_cloud_disk_manager_internal_pkg_performance_config_config_proto_rawDesc = []byte{
	0x0a, 0x3f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5,
	0x05, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x4f, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x73, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x6e, 0x64, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x03,
	0x33, 0x30, 0x30, 0x52, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x46,
	0x72, 0x6f, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x4d, 0x69, 0x42, 0x73, 0x12, 0x55, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x73, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42,
	0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x3a, 0x03, 0x33, 0x30, 0x30, 0x52, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x73, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42,
	0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42, 0x73, 0x12, 0x4f, 0x0a, 0x20,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44,
	0x69, 0x73, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x03, 0x32, 0x30, 0x30, 0x52, 0x20, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x69, 0x73, 0x6b,
	0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42, 0x73, 0x12, 0x52, 0x0a,
	0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69,
	0x42, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x04, 0x33, 0x30, 0x30, 0x30, 0x52, 0x21,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42,
	0x73, 0x12, 0x58, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x6e, 0x64,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x3a,
	0x04, 0x33, 0x30, 0x30, 0x30, 0x52, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61,
	0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42, 0x73, 0x12, 0x4d, 0x0a, 0x1f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x52,
	0x4c, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x3a, 0x03, 0x32, 0x30, 0x30, 0x52, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x52, 0x4c, 0x42, 0x61, 0x6e,
	0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42, 0x73, 0x12, 0x55, 0x0a, 0x23, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x44, 0x69, 0x73, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x03, 0x32, 0x30, 0x30, 0x52, 0x23, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x44, 0x69, 0x73, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42,
	0x73, 0x12, 0x43, 0x0a, 0x1a, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x73, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x42, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x03, 0x32, 0x30, 0x30, 0x52, 0x1a, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x4d, 0x69, 0x42, 0x73, 0x42, 0x50, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x6e, 0x62, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x6b,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
}

var (
	file_cloud_disk_manager_internal_pkg_performance_config_config_proto_rawDescOnce sync.Once
	file_cloud_disk_manager_internal_pkg_performance_config_config_proto_rawDescData = file_cloud_disk_manager_internal_pkg_performance_config_config_proto_rawDesc
)

func file_cloud_disk_manager_internal_pkg_performance_config_config_proto_rawDescGZIP() []byte {
	file_cloud_disk_manager_internal_pkg_performance_config_config_proto_rawDescOnce.Do(func() {
		file_cloud_disk_manager_internal_pkg_performance_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_disk_manager_internal_pkg_performance_config_config_proto_rawDescData)
	})
	return file_cloud_disk_manager_internal_pkg_performance_config_config_proto_rawDescData
}

var file_cloud_disk_manager_internal_pkg_performance_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_cloud_disk_manager_internal_pkg_performance_config_config_proto_goTypes = []interface{}{
	(*PerformanceConfig)(nil), // 0: performance.PerformanceConfig
}
var file_cloud_disk_manager_internal_pkg_performance_config_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cloud_disk_manager_internal_pkg_performance_config_config_proto_init() }
func file_cloud_disk_manager_internal_pkg_performance_config_config_proto_init() {
	if File_cloud_disk_manager_internal_pkg_performance_config_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_disk_manager_internal_pkg_performance_config_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_disk_manager_internal_pkg_performance_config_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_disk_manager_internal_pkg_performance_config_config_proto_goTypes,
		DependencyIndexes: file_cloud_disk_manager_internal_pkg_performance_config_config_proto_depIdxs,
		MessageInfos:      file_cloud_disk_manager_internal_pkg_performance_config_config_proto_msgTypes,
	}.Build()
	File_cloud_disk_manager_internal_pkg_performance_config_config_proto = out.File
	file_cloud_disk_manager_internal_pkg_performance_config_config_proto_rawDesc = nil
	file_cloud_disk_manager_internal_pkg_performance_config_config_proto_goTypes = nil
	file_cloud_disk_manager_internal_pkg_performance_config_config_proto_depIdxs = nil
}
