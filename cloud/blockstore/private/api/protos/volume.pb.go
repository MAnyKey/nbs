// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.0
// source: cloud/blockstore/private/api/protos/volume.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ERebuildMetadataType int32

const (
	ERebuildMetadataType_USED_BLOCKS ERebuildMetadataType = 0
	ERebuildMetadataType_BLOCK_COUNT ERebuildMetadataType = 1
)

// Enum value maps for ERebuildMetadataType.
var (
	ERebuildMetadataType_name = map[int32]string{
		0: "USED_BLOCKS",
		1: "BLOCK_COUNT",
	}
	ERebuildMetadataType_value = map[string]int32{
		"USED_BLOCKS": 0,
		"BLOCK_COUNT": 1,
	}
)

func (x ERebuildMetadataType) Enum() *ERebuildMetadataType {
	p := new(ERebuildMetadataType)
	*p = x
	return p
}

func (x ERebuildMetadataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERebuildMetadataType) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_blockstore_private_api_protos_volume_proto_enumTypes[0].Descriptor()
}

func (ERebuildMetadataType) Type() protoreflect.EnumType {
	return &file_cloud_blockstore_private_api_protos_volume_proto_enumTypes[0]
}

func (x ERebuildMetadataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ERebuildMetadataType.Descriptor instead.
func (ERebuildMetadataType) EnumDescriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{0}
}

type TDescribeBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskId            string `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	StartIndex        uint32 `protobuf:"varint,2,opt,name=StartIndex,proto3" json:"StartIndex,omitempty"`
	BlocksCount       uint32 `protobuf:"varint,3,opt,name=BlocksCount,proto3" json:"BlocksCount,omitempty"`
	CheckpointId      string `protobuf:"bytes,4,opt,name=CheckpointId,proto3" json:"CheckpointId,omitempty"`
	BlocksCountToRead uint32 `protobuf:"varint,5,opt,name=BlocksCountToRead,proto3" json:"BlocksCountToRead,omitempty"`
}

func (x *TDescribeBlocksRequest) Reset() {
	*x = TDescribeBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDescribeBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDescribeBlocksRequest) ProtoMessage() {}

func (x *TDescribeBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDescribeBlocksRequest.ProtoReflect.Descriptor instead.
func (*TDescribeBlocksRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{0}
}

func (x *TDescribeBlocksRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TDescribeBlocksRequest) GetStartIndex() uint32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *TDescribeBlocksRequest) GetBlocksCount() uint32 {
	if x != nil {
		return x.BlocksCount
	}
	return 0
}

func (x *TDescribeBlocksRequest) GetCheckpointId() string {
	if x != nil {
		return x.CheckpointId
	}
	return ""
}

func (x *TDescribeBlocksRequest) GetBlocksCountToRead() uint32 {
	if x != nil {
		return x.BlocksCountToRead
	}
	return 0
}

type TFreshBlockRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartIndex    uint32 `protobuf:"varint,1,opt,name=StartIndex,proto3" json:"StartIndex,omitempty"`
	BlocksCount   uint32 `protobuf:"varint,2,opt,name=BlocksCount,proto3" json:"BlocksCount,omitempty"`
	BlocksContent []byte `protobuf:"bytes,3,opt,name=BlocksContent,proto3" json:"BlocksContent,omitempty"`
}

func (x *TFreshBlockRange) Reset() {
	*x = TFreshBlockRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFreshBlockRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFreshBlockRange) ProtoMessage() {}

func (x *TFreshBlockRange) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFreshBlockRange.ProtoReflect.Descriptor instead.
func (*TFreshBlockRange) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{1}
}

func (x *TFreshBlockRange) GetStartIndex() uint32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *TFreshBlockRange) GetBlocksCount() uint32 {
	if x != nil {
		return x.BlocksCount
	}
	return 0
}

func (x *TFreshBlockRange) GetBlocksContent() []byte {
	if x != nil {
		return x.BlocksContent
	}
	return nil
}

type TRangeInBlob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlobOffset  uint32 `protobuf:"varint,1,opt,name=BlobOffset,proto3" json:"BlobOffset,omitempty"`
	BlockIndex  uint32 `protobuf:"varint,2,opt,name=BlockIndex,proto3" json:"BlockIndex,omitempty"`
	BlocksCount uint32 `protobuf:"varint,3,opt,name=BlocksCount,proto3" json:"BlocksCount,omitempty"`
}

func (x *TRangeInBlob) Reset() {
	*x = TRangeInBlob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRangeInBlob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRangeInBlob) ProtoMessage() {}

func (x *TRangeInBlob) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRangeInBlob.ProtoReflect.Descriptor instead.
func (*TRangeInBlob) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{2}
}

func (x *TRangeInBlob) GetBlobOffset() uint32 {
	if x != nil {
		return x.BlobOffset
	}
	return 0
}

func (x *TRangeInBlob) GetBlockIndex() uint32 {
	if x != nil {
		return x.BlockIndex
	}
	return 0
}

func (x *TRangeInBlob) GetBlocksCount() uint32 {
	if x != nil {
		return x.BlocksCount
	}
	return 0
}

type TBlobPiece struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlobId    *TLogoBlobID    `protobuf:"bytes,1,opt,name=BlobId,proto3" json:"BlobId,omitempty"`
	BSGroupId uint32          `protobuf:"varint,2,opt,name=BSGroupId,proto3" json:"BSGroupId,omitempty"`
	Ranges    []*TRangeInBlob `protobuf:"bytes,3,rep,name=Ranges,proto3" json:"Ranges,omitempty"`
}

func (x *TBlobPiece) Reset() {
	*x = TBlobPiece{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBlobPiece) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBlobPiece) ProtoMessage() {}

func (x *TBlobPiece) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBlobPiece.ProtoReflect.Descriptor instead.
func (*TBlobPiece) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{3}
}

func (x *TBlobPiece) GetBlobId() *TLogoBlobID {
	if x != nil {
		return x.BlobId
	}
	return nil
}

func (x *TBlobPiece) GetBSGroupId() uint32 {
	if x != nil {
		return x.BSGroupId
	}
	return 0
}

func (x *TBlobPiece) GetRanges() []*TRangeInBlob {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type TDescribeBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreshBlockRanges []*TFreshBlockRange `protobuf:"bytes,1,rep,name=FreshBlockRanges,proto3" json:"FreshBlockRanges,omitempty"`
	BlobPieces       []*TBlobPiece       `protobuf:"bytes,2,rep,name=BlobPieces,proto3" json:"BlobPieces,omitempty"`
}

func (x *TDescribeBlocksResponse) Reset() {
	*x = TDescribeBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDescribeBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDescribeBlocksResponse) ProtoMessage() {}

func (x *TDescribeBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDescribeBlocksResponse.ProtoReflect.Descriptor instead.
func (*TDescribeBlocksResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{4}
}

func (x *TDescribeBlocksResponse) GetFreshBlockRanges() []*TFreshBlockRange {
	if x != nil {
		return x.FreshBlockRanges
	}
	return nil
}

func (x *TDescribeBlocksResponse) GetBlobPieces() []*TBlobPiece {
	if x != nil {
		return x.BlobPieces
	}
	return nil
}

type TCompactRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskId      string `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	StartIndex  uint32 `protobuf:"varint,2,opt,name=StartIndex,proto3" json:"StartIndex,omitempty"`
	BlocksCount uint32 `protobuf:"varint,3,opt,name=BlocksCount,proto3" json:"BlocksCount,omitempty"`
}

func (x *TCompactRangeRequest) Reset() {
	*x = TCompactRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCompactRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCompactRangeRequest) ProtoMessage() {}

func (x *TCompactRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCompactRangeRequest.ProtoReflect.Descriptor instead.
func (*TCompactRangeRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{5}
}

func (x *TCompactRangeRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TCompactRangeRequest) GetStartIndex() uint32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *TCompactRangeRequest) GetBlocksCount() uint32 {
	if x != nil {
		return x.BlocksCount
	}
	return 0
}

type TCompactRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId string `protobuf:"bytes,1,opt,name=OperationId,proto3" json:"OperationId,omitempty"`
}

func (x *TCompactRangeResponse) Reset() {
	*x = TCompactRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCompactRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCompactRangeResponse) ProtoMessage() {}

func (x *TCompactRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCompactRangeResponse.ProtoReflect.Descriptor instead.
func (*TCompactRangeResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{6}
}

func (x *TCompactRangeResponse) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type TGetCompactionStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskId      string `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	OperationId string `protobuf:"bytes,2,opt,name=OperationId,proto3" json:"OperationId,omitempty"`
}

func (x *TGetCompactionStatusRequest) Reset() {
	*x = TGetCompactionStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetCompactionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetCompactionStatusRequest) ProtoMessage() {}

func (x *TGetCompactionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetCompactionStatusRequest.ProtoReflect.Descriptor instead.
func (*TGetCompactionStatusRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{7}
}

func (x *TGetCompactionStatusRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TGetCompactionStatusRequest) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type TGetCompactionStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of processed ranges.
	Progress uint32 `protobuf:"varint,1,opt,name=Progress,proto3" json:"Progress,omitempty"`
	// Total number of ranges.
	Total uint32 `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	// Compaction status.
	IsCompleted bool `protobuf:"varint,3,opt,name=IsCompleted,proto3" json:"IsCompleted,omitempty"`
}

func (x *TGetCompactionStatusResponse) Reset() {
	*x = TGetCompactionStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetCompactionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetCompactionStatusResponse) ProtoMessage() {}

func (x *TGetCompactionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetCompactionStatusResponse.ProtoReflect.Descriptor instead.
func (*TGetCompactionStatusResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{8}
}

func (x *TGetCompactionStatusResponse) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *TGetCompactionStatusResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TGetCompactionStatusResponse) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

type TModifyTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskId       string   `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	TagsToAdd    []string `protobuf:"bytes,2,rep,name=TagsToAdd,proto3" json:"TagsToAdd,omitempty"`
	TagsToRemove []string `protobuf:"bytes,3,rep,name=TagsToRemove,proto3" json:"TagsToRemove,omitempty"`
	// Volume configuration version.
	ConfigVersion uint32 `protobuf:"varint,4,opt,name=ConfigVersion,proto3" json:"ConfigVersion,omitempty"`
}

func (x *TModifyTagsRequest) Reset() {
	*x = TModifyTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TModifyTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TModifyTagsRequest) ProtoMessage() {}

func (x *TModifyTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TModifyTagsRequest.ProtoReflect.Descriptor instead.
func (*TModifyTagsRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{9}
}

func (x *TModifyTagsRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TModifyTagsRequest) GetTagsToAdd() []string {
	if x != nil {
		return x.TagsToAdd
	}
	return nil
}

func (x *TModifyTagsRequest) GetTagsToRemove() []string {
	if x != nil {
		return x.TagsToRemove
	}
	return nil
}

func (x *TModifyTagsRequest) GetConfigVersion() uint32 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

type TModifyTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TModifyTagsResponse) Reset() {
	*x = TModifyTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TModifyTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TModifyTagsResponse) ProtoMessage() {}

func (x *TModifyTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TModifyTagsResponse.ProtoReflect.Descriptor instead.
func (*TModifyTagsResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{10}
}

type TDescribeVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskId string `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
}

func (x *TDescribeVolumeRequest) Reset() {
	*x = TDescribeVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDescribeVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDescribeVolumeRequest) ProtoMessage() {}

func (x *TDescribeVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDescribeVolumeRequest.ProtoReflect.Descriptor instead.
func (*TDescribeVolumeRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{11}
}

func (x *TDescribeVolumeRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

type TRebaseVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Label of volume to apply rebase for.
	DiskId string `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	// Label of volume to rebase onto.
	TargetBaseDiskId string `protobuf:"bytes,2,opt,name=TargetBaseDiskId,proto3" json:"TargetBaseDiskId,omitempty"`
	// Volume configuration version.
	ConfigVersion uint32 `protobuf:"varint,3,opt,name=ConfigVersion,proto3" json:"ConfigVersion,omitempty"`
}

func (x *TRebaseVolumeRequest) Reset() {
	*x = TRebaseVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRebaseVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRebaseVolumeRequest) ProtoMessage() {}

func (x *TRebaseVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRebaseVolumeRequest.ProtoReflect.Descriptor instead.
func (*TRebaseVolumeRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{12}
}

func (x *TRebaseVolumeRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TRebaseVolumeRequest) GetTargetBaseDiskId() string {
	if x != nil {
		return x.TargetBaseDiskId
	}
	return ""
}

func (x *TRebaseVolumeRequest) GetConfigVersion() uint32 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

type TRebaseVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRebaseVolumeResponse) Reset() {
	*x = TRebaseVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRebaseVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRebaseVolumeResponse) ProtoMessage() {}

func (x *TRebaseVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRebaseVolumeResponse.ProtoReflect.Descriptor instead.
func (*TRebaseVolumeResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{13}
}

type TRebindVolumesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EVolumeBinding, see libs/storage/service/service_state.h
	Binding uint32 `protobuf:"varint,1,opt,name=Binding,proto3" json:"Binding,omitempty"`
}

func (x *TRebindVolumesRequest) Reset() {
	*x = TRebindVolumesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRebindVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRebindVolumesRequest) ProtoMessage() {}

func (x *TRebindVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRebindVolumesRequest.ProtoReflect.Descriptor instead.
func (*TRebindVolumesRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{14}
}

func (x *TRebindVolumesRequest) GetBinding() uint32 {
	if x != nil {
		return x.Binding
	}
	return 0
}

type TRebindVolumesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRebindVolumesResponse) Reset() {
	*x = TRebindVolumesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRebindVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRebindVolumesResponse) ProtoMessage() {}

func (x *TRebindVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRebindVolumesResponse.ProtoReflect.Descriptor instead.
func (*TRebindVolumesResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{15}
}

type TDrainNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// KeepDown hive flag. If set, the node will stay disabled after draining.
	KeepDown bool `protobuf:"varint,1,opt,name=KeepDown,proto3" json:"KeepDown,omitempty"`
}

func (x *TDrainNodeRequest) Reset() {
	*x = TDrainNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDrainNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDrainNodeRequest) ProtoMessage() {}

func (x *TDrainNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDrainNodeRequest.ProtoReflect.Descriptor instead.
func (*TDrainNodeRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{16}
}

func (x *TDrainNodeRequest) GetKeepDown() bool {
	if x != nil {
		return x.KeepDown
	}
	return false
}

type TDrainNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TDrainNodeResponse) Reset() {
	*x = TDrainNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDrainNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDrainNodeResponse) ProtoMessage() {}

func (x *TDrainNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDrainNodeResponse.ProtoReflect.Descriptor instead.
func (*TDrainNodeResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{17}
}

type TRebuildMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskId string `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	// Type of metadata to rebuild.
	MetadataType ERebuildMetadataType `protobuf:"varint,2,opt,name=MetadataType,proto3,enum=NCloud.NBlockStore.NPrivateProto.ERebuildMetadataType" json:"MetadataType,omitempty"`
	// Operation specific batch size.
	BatchSize uint32 `protobuf:"varint,3,opt,name=BatchSize,proto3" json:"BatchSize,omitempty"`
}

func (x *TRebuildMetadataRequest) Reset() {
	*x = TRebuildMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRebuildMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRebuildMetadataRequest) ProtoMessage() {}

func (x *TRebuildMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRebuildMetadataRequest.ProtoReflect.Descriptor instead.
func (*TRebuildMetadataRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{18}
}

func (x *TRebuildMetadataRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TRebuildMetadataRequest) GetMetadataType() ERebuildMetadataType {
	if x != nil {
		return x.MetadataType
	}
	return ERebuildMetadataType_USED_BLOCKS
}

func (x *TRebuildMetadataRequest) GetBatchSize() uint32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

type TRebuildMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TRebuildMetadataResponse) Reset() {
	*x = TRebuildMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRebuildMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRebuildMetadataResponse) ProtoMessage() {}

func (x *TRebuildMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRebuildMetadataResponse.ProtoReflect.Descriptor instead.
func (*TRebuildMetadataResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{19}
}

type TMetadataRebuildProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of units processed so far.
	Processed uint64 `protobuf:"varint,1,opt,name=Processed,proto3" json:"Processed,omitempty"`
	// Total number of units to process.
	Total uint64 `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	// Is operation completed.
	IsCompleted bool `protobuf:"varint,3,opt,name=IsCompleted,proto3" json:"IsCompleted,omitempty"`
}

func (x *TMetadataRebuildProgress) Reset() {
	*x = TMetadataRebuildProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMetadataRebuildProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMetadataRebuildProgress) ProtoMessage() {}

func (x *TMetadataRebuildProgress) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMetadataRebuildProgress.ProtoReflect.Descriptor instead.
func (*TMetadataRebuildProgress) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{20}
}

func (x *TMetadataRebuildProgress) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *TMetadataRebuildProgress) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TMetadataRebuildProgress) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

type TGetRebuildMetadataStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskId string `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
}

func (x *TGetRebuildMetadataStatusRequest) Reset() {
	*x = TGetRebuildMetadataStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetRebuildMetadataStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetRebuildMetadataStatusRequest) ProtoMessage() {}

func (x *TGetRebuildMetadataStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetRebuildMetadataStatusRequest.ProtoReflect.Descriptor instead.
func (*TGetRebuildMetadataStatusRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{21}
}

func (x *TGetRebuildMetadataStatusRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

type TGetRebuildMetadataStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress *TMetadataRebuildProgress `protobuf:"bytes,1,opt,name=Progress,proto3" json:"Progress,omitempty"`
}

func (x *TGetRebuildMetadataStatusResponse) Reset() {
	*x = TGetRebuildMetadataStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetRebuildMetadataStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetRebuildMetadataStatusResponse) ProtoMessage() {}

func (x *TGetRebuildMetadataStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetRebuildMetadataStatusResponse.ProtoReflect.Descriptor instead.
func (*TGetRebuildMetadataStatusResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{22}
}

func (x *TGetRebuildMetadataStatusResponse) GetProgress() *TMetadataRebuildProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type TScanDiskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskId string `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	// Number of blobs per batch.
	BatchSize uint32 `protobuf:"varint,2,opt,name=BatchSize,proto3" json:"BatchSize,omitempty"`
}

func (x *TScanDiskRequest) Reset() {
	*x = TScanDiskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TScanDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TScanDiskRequest) ProtoMessage() {}

func (x *TScanDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TScanDiskRequest.ProtoReflect.Descriptor instead.
func (*TScanDiskRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{23}
}

func (x *TScanDiskRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TScanDiskRequest) GetBatchSize() uint32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

type TScanDiskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TScanDiskResponse) Reset() {
	*x = TScanDiskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TScanDiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TScanDiskResponse) ProtoMessage() {}

func (x *TScanDiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TScanDiskResponse.ProtoReflect.Descriptor instead.
func (*TScanDiskResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{24}
}

type TScanDiskProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of blobs processed so far.
	Processed uint64 `protobuf:"varint,1,opt,name=Processed,proto3" json:"Processed,omitempty"`
	// Total number of blobs to process.
	Total uint64 `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	// Is operation completed.
	IsCompleted bool `protobuf:"varint,3,opt,name=IsCompleted,proto3" json:"IsCompleted,omitempty"`
	// Blobs processed with error.
	BrokenBlobs []*TLogoBlobID `protobuf:"bytes,4,rep,name=BrokenBlobs,proto3" json:"BrokenBlobs,omitempty"`
}

func (x *TScanDiskProgress) Reset() {
	*x = TScanDiskProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TScanDiskProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TScanDiskProgress) ProtoMessage() {}

func (x *TScanDiskProgress) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TScanDiskProgress.ProtoReflect.Descriptor instead.
func (*TScanDiskProgress) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{25}
}

func (x *TScanDiskProgress) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *TScanDiskProgress) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TScanDiskProgress) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *TScanDiskProgress) GetBrokenBlobs() []*TLogoBlobID {
	if x != nil {
		return x.BrokenBlobs
	}
	return nil
}

type TGetScanDiskStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskId string `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
}

func (x *TGetScanDiskStatusRequest) Reset() {
	*x = TGetScanDiskStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetScanDiskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetScanDiskStatusRequest) ProtoMessage() {}

func (x *TGetScanDiskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetScanDiskStatusRequest.ProtoReflect.Descriptor instead.
func (*TGetScanDiskStatusRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{26}
}

func (x *TGetScanDiskStatusRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

type TGetScanDiskStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress *TScanDiskProgress `protobuf:"bytes,1,opt,name=Progress,proto3" json:"Progress,omitempty"`
}

func (x *TGetScanDiskStatusResponse) Reset() {
	*x = TGetScanDiskStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetScanDiskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetScanDiskStatusResponse) ProtoMessage() {}

func (x *TGetScanDiskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetScanDiskStatusResponse.ProtoReflect.Descriptor instead.
func (*TGetScanDiskStatusResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{27}
}

func (x *TGetScanDiskStatusResponse) GetProgress() *TScanDiskProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type TVolumeChannelsToPoolsKinds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Mapping from channels to PoolKinds.
	Data map[uint32]string `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TVolumeChannelsToPoolsKinds) Reset() {
	*x = TVolumeChannelsToPoolsKinds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeChannelsToPoolsKinds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeChannelsToPoolsKinds) ProtoMessage() {}

func (x *TVolumeChannelsToPoolsKinds) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeChannelsToPoolsKinds.ProtoReflect.Descriptor instead.
func (*TVolumeChannelsToPoolsKinds) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{28}
}

func (x *TVolumeChannelsToPoolsKinds) GetData() map[uint32]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type TSetupChannelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Label of the volume to apply to setup channels for.
	DiskId string `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	// Config version.
	ConfigVersion uint32 `protobuf:"varint,2,opt,name=ConfigVersion,proto3" json:"ConfigVersion,omitempty"`
	// Mapping volume channel ids to media kinds.
	VolumeChannelsToPoolsKinds *TVolumeChannelsToPoolsKinds `protobuf:"bytes,3,opt,name=VolumeChannelsToPoolsKinds,proto3" json:"VolumeChannelsToPoolsKinds,omitempty"`
	// Is PoolKind set manually or by config.
	IsPartitionsPoolKindSetManually *bool `protobuf:"varint,4,opt,name=IsPartitionsPoolKindSetManually,proto3,oneof" json:"IsPartitionsPoolKindSetManually,omitempty"`
}

func (x *TSetupChannelsRequest) Reset() {
	*x = TSetupChannelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSetupChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSetupChannelsRequest) ProtoMessage() {}

func (x *TSetupChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSetupChannelsRequest.ProtoReflect.Descriptor instead.
func (*TSetupChannelsRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{29}
}

func (x *TSetupChannelsRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TSetupChannelsRequest) GetConfigVersion() uint32 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *TSetupChannelsRequest) GetVolumeChannelsToPoolsKinds() *TVolumeChannelsToPoolsKinds {
	if x != nil {
		return x.VolumeChannelsToPoolsKinds
	}
	return nil
}

func (x *TSetupChannelsRequest) GetIsPartitionsPoolKindSetManually() bool {
	if x != nil && x.IsPartitionsPoolKindSetManually != nil {
		return *x.IsPartitionsPoolKindSetManually
	}
	return false
}

type TSetupChannelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TSetupChannelsResponse) Reset() {
	*x = TSetupChannelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSetupChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSetupChannelsResponse) ProtoMessage() {}

func (x *TSetupChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSetupChannelsResponse.ProtoReflect.Descriptor instead.
func (*TSetupChannelsResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{30}
}

type TFinishFillDiskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Label of volume to finish fill for.
	DiskId string `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	// Volume configuration version.
	ConfigVersion uint32 `protobuf:"varint,2,opt,name=ConfigVersion,proto3" json:"ConfigVersion,omitempty"`
	// Requests with incorrect FillGeneration will be rejected.
	FillGeneration uint64 `protobuf:"varint,3,opt,name=FillGeneration,proto3" json:"FillGeneration,omitempty"`
}

func (x *TFinishFillDiskRequest) Reset() {
	*x = TFinishFillDiskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFinishFillDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFinishFillDiskRequest) ProtoMessage() {}

func (x *TFinishFillDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFinishFillDiskRequest.ProtoReflect.Descriptor instead.
func (*TFinishFillDiskRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{31}
}

func (x *TFinishFillDiskRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TFinishFillDiskRequest) GetConfigVersion() uint32 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *TFinishFillDiskRequest) GetFillGeneration() uint64 {
	if x != nil {
		return x.FillGeneration
	}
	return 0
}

type TFinishFillDiskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TFinishFillDiskResponse) Reset() {
	*x = TFinishFillDiskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFinishFillDiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFinishFillDiskResponse) ProtoMessage() {}

func (x *TFinishFillDiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFinishFillDiskResponse.ProtoReflect.Descriptor instead.
func (*TFinishFillDiskResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP(), []int{32}
}

var File_cloud_blockstore_private_api_protos_volume_proto protoreflect.FileDescriptor

var file_cloud_blockstore_private_api_protos_volume_proto_rawDesc = []byte{
	0x0a, 0x30, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x20, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x01, 0x0a, 0x16, 0x54, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x11, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x52, 0x65,
	0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x22, 0x7a, 0x0a, 0x10, 0x54,
	0x46, 0x72, 0x65, 0x73, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x70, 0x0a, 0x0c, 0x54, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x49, 0x6e, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x62, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x42, 0x6c, 0x6f,
	0x62, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x0a, 0x54, 0x42,
	0x6c, 0x6f, 0x62, 0x50, 0x69, 0x65, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x42, 0x6c, 0x6f, 0x62,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x6f, 0x67,
	0x6f, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x06, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x42, 0x53, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x42, 0x53, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x46, 0x0a,
	0x06, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x06, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x17, 0x54, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5e, 0x0a, 0x10, 0x46, 0x72, 0x65, 0x73, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x4e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x4e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x46, 0x72, 0x65, 0x73, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x10, 0x46, 0x72, 0x65, 0x73, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x4c, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x62, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x42, 0x6c, 0x6f, 0x62, 0x50, 0x69,
	0x65, 0x63, 0x65, 0x52, 0x0a, 0x42, 0x6c, 0x6f, 0x62, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x22,
	0x70, 0x0a, 0x14, 0x54, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x39, 0x0a, 0x15, 0x54, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x1b,
	0x54, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44,
	0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x73,
	0x6b, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x1c, 0x54, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x54, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73,
	0x54, 0x6f, 0x41, 0x64, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x67,
	0x73, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x67, 0x73, 0x54, 0x6f,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61,
	0x67, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x15, 0x0a, 0x13, 0x54, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x16, 0x54, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x54, 0x52,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65,
	0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15,
	0x54, 0x52, 0x65, 0x62, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x15, 0x54, 0x52, 0x65, 0x62, 0x69, 0x6e, 0x64,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x18, 0x0a, 0x16, 0x54, 0x52, 0x65, 0x62,
	0x69, 0x6e, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2f, 0x0a, 0x11, 0x54, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x65, 0x65, 0x70, 0x44,
	0x6f, 0x77, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4b, 0x65, 0x65, 0x70, 0x44,
	0x6f, 0x77, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x17, 0x54, 0x52,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x5a, 0x0a,
	0x0c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x54, 0x52, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x70, 0x0a, 0x18, 0x54, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x3a, 0x0a, 0x20, 0x54, 0x47, 0x65, 0x74, 0x52, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73,
	0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49,
	0x64, 0x22, 0x7b, 0x0a, 0x21, 0x54, 0x47, 0x65, 0x74, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x48,
	0x0a, 0x10, 0x54, 0x53, 0x63, 0x61, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x54, 0x53, 0x63, 0x61,
	0x6e, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xba, 0x01,
	0x0a, 0x11, 0x54, 0x53, 0x63, 0x61, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x6e, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x4c, 0x6f, 0x67, 0x6f, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x0b, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x22, 0x33, 0x0a, 0x19, 0x54, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x22,
	0x6d, 0x0a, 0x1a, 0x54, 0x47, 0x65, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x53, 0x63, 0x61, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xb3,
	0x01, 0x0a, 0x1b, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x54, 0x6f, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x12, 0x5b,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x4e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x4e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x54,
	0x6f, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xc7, 0x02, 0x0a, 0x15, 0x54, 0x53, 0x65, 0x74, 0x75, 0x70, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x7d, 0x0a, 0x1a,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x54, 0x6f,
	0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x54, 0x6f, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x52,
	0x1a, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x54,
	0x6f, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x12, 0x4d, 0x0a, 0x1f, 0x49,
	0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x4b,
	0x69, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x1f, 0x49, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x4b, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x42, 0x22, 0x0a, 0x20, 0x5f, 0x49,
	0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x4b,
	0x69, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x22, 0x18,
	0x0a, 0x16, 0x54, 0x53, 0x65, 0x74, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a, 0x16, 0x54, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x46, 0x69, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x46, 0x69, 0x6c, 0x6c, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x19, 0x0a, 0x17, 0x54, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x46, 0x69, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2a, 0x38, 0x0a, 0x14, 0x45, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x53, 0x45, 0x44, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x53, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x42, 0x41, 0x5a,
	0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6e, 0x62, 0x73, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_blockstore_private_api_protos_volume_proto_rawDescOnce sync.Once
	file_cloud_blockstore_private_api_protos_volume_proto_rawDescData = file_cloud_blockstore_private_api_protos_volume_proto_rawDesc
)

func file_cloud_blockstore_private_api_protos_volume_proto_rawDescGZIP() []byte {
	file_cloud_blockstore_private_api_protos_volume_proto_rawDescOnce.Do(func() {
		file_cloud_blockstore_private_api_protos_volume_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_blockstore_private_api_protos_volume_proto_rawDescData)
	})
	return file_cloud_blockstore_private_api_protos_volume_proto_rawDescData
}

var file_cloud_blockstore_private_api_protos_volume_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloud_blockstore_private_api_protos_volume_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_cloud_blockstore_private_api_protos_volume_proto_goTypes = []interface{}{
	(ERebuildMetadataType)(0),                 // 0: NCloud.NBlockStore.NPrivateProto.ERebuildMetadataType
	(*TDescribeBlocksRequest)(nil),            // 1: NCloud.NBlockStore.NPrivateProto.TDescribeBlocksRequest
	(*TFreshBlockRange)(nil),                  // 2: NCloud.NBlockStore.NPrivateProto.TFreshBlockRange
	(*TRangeInBlob)(nil),                      // 3: NCloud.NBlockStore.NPrivateProto.TRangeInBlob
	(*TBlobPiece)(nil),                        // 4: NCloud.NBlockStore.NPrivateProto.TBlobPiece
	(*TDescribeBlocksResponse)(nil),           // 5: NCloud.NBlockStore.NPrivateProto.TDescribeBlocksResponse
	(*TCompactRangeRequest)(nil),              // 6: NCloud.NBlockStore.NPrivateProto.TCompactRangeRequest
	(*TCompactRangeResponse)(nil),             // 7: NCloud.NBlockStore.NPrivateProto.TCompactRangeResponse
	(*TGetCompactionStatusRequest)(nil),       // 8: NCloud.NBlockStore.NPrivateProto.TGetCompactionStatusRequest
	(*TGetCompactionStatusResponse)(nil),      // 9: NCloud.NBlockStore.NPrivateProto.TGetCompactionStatusResponse
	(*TModifyTagsRequest)(nil),                // 10: NCloud.NBlockStore.NPrivateProto.TModifyTagsRequest
	(*TModifyTagsResponse)(nil),               // 11: NCloud.NBlockStore.NPrivateProto.TModifyTagsResponse
	(*TDescribeVolumeRequest)(nil),            // 12: NCloud.NBlockStore.NPrivateProto.TDescribeVolumeRequest
	(*TRebaseVolumeRequest)(nil),              // 13: NCloud.NBlockStore.NPrivateProto.TRebaseVolumeRequest
	(*TRebaseVolumeResponse)(nil),             // 14: NCloud.NBlockStore.NPrivateProto.TRebaseVolumeResponse
	(*TRebindVolumesRequest)(nil),             // 15: NCloud.NBlockStore.NPrivateProto.TRebindVolumesRequest
	(*TRebindVolumesResponse)(nil),            // 16: NCloud.NBlockStore.NPrivateProto.TRebindVolumesResponse
	(*TDrainNodeRequest)(nil),                 // 17: NCloud.NBlockStore.NPrivateProto.TDrainNodeRequest
	(*TDrainNodeResponse)(nil),                // 18: NCloud.NBlockStore.NPrivateProto.TDrainNodeResponse
	(*TRebuildMetadataRequest)(nil),           // 19: NCloud.NBlockStore.NPrivateProto.TRebuildMetadataRequest
	(*TRebuildMetadataResponse)(nil),          // 20: NCloud.NBlockStore.NPrivateProto.TRebuildMetadataResponse
	(*TMetadataRebuildProgress)(nil),          // 21: NCloud.NBlockStore.NPrivateProto.TMetadataRebuildProgress
	(*TGetRebuildMetadataStatusRequest)(nil),  // 22: NCloud.NBlockStore.NPrivateProto.TGetRebuildMetadataStatusRequest
	(*TGetRebuildMetadataStatusResponse)(nil), // 23: NCloud.NBlockStore.NPrivateProto.TGetRebuildMetadataStatusResponse
	(*TScanDiskRequest)(nil),                  // 24: NCloud.NBlockStore.NPrivateProto.TScanDiskRequest
	(*TScanDiskResponse)(nil),                 // 25: NCloud.NBlockStore.NPrivateProto.TScanDiskResponse
	(*TScanDiskProgress)(nil),                 // 26: NCloud.NBlockStore.NPrivateProto.TScanDiskProgress
	(*TGetScanDiskStatusRequest)(nil),         // 27: NCloud.NBlockStore.NPrivateProto.TGetScanDiskStatusRequest
	(*TGetScanDiskStatusResponse)(nil),        // 28: NCloud.NBlockStore.NPrivateProto.TGetScanDiskStatusResponse
	(*TVolumeChannelsToPoolsKinds)(nil),       // 29: NCloud.NBlockStore.NPrivateProto.TVolumeChannelsToPoolsKinds
	(*TSetupChannelsRequest)(nil),             // 30: NCloud.NBlockStore.NPrivateProto.TSetupChannelsRequest
	(*TSetupChannelsResponse)(nil),            // 31: NCloud.NBlockStore.NPrivateProto.TSetupChannelsResponse
	(*TFinishFillDiskRequest)(nil),            // 32: NCloud.NBlockStore.NPrivateProto.TFinishFillDiskRequest
	(*TFinishFillDiskResponse)(nil),           // 33: NCloud.NBlockStore.NPrivateProto.TFinishFillDiskResponse
	nil,                                       // 34: NCloud.NBlockStore.NPrivateProto.TVolumeChannelsToPoolsKinds.DataEntry
	(*TLogoBlobID)(nil),                       // 35: NCloud.NBlockStore.NPrivateProto.TLogoBlobID
}
var file_cloud_blockstore_private_api_protos_volume_proto_depIdxs = []int32{
	35, // 0: NCloud.NBlockStore.NPrivateProto.TBlobPiece.BlobId:type_name -> NCloud.NBlockStore.NPrivateProto.TLogoBlobID
	3,  // 1: NCloud.NBlockStore.NPrivateProto.TBlobPiece.Ranges:type_name -> NCloud.NBlockStore.NPrivateProto.TRangeInBlob
	2,  // 2: NCloud.NBlockStore.NPrivateProto.TDescribeBlocksResponse.FreshBlockRanges:type_name -> NCloud.NBlockStore.NPrivateProto.TFreshBlockRange
	4,  // 3: NCloud.NBlockStore.NPrivateProto.TDescribeBlocksResponse.BlobPieces:type_name -> NCloud.NBlockStore.NPrivateProto.TBlobPiece
	0,  // 4: NCloud.NBlockStore.NPrivateProto.TRebuildMetadataRequest.MetadataType:type_name -> NCloud.NBlockStore.NPrivateProto.ERebuildMetadataType
	21, // 5: NCloud.NBlockStore.NPrivateProto.TGetRebuildMetadataStatusResponse.Progress:type_name -> NCloud.NBlockStore.NPrivateProto.TMetadataRebuildProgress
	35, // 6: NCloud.NBlockStore.NPrivateProto.TScanDiskProgress.BrokenBlobs:type_name -> NCloud.NBlockStore.NPrivateProto.TLogoBlobID
	26, // 7: NCloud.NBlockStore.NPrivateProto.TGetScanDiskStatusResponse.Progress:type_name -> NCloud.NBlockStore.NPrivateProto.TScanDiskProgress
	34, // 8: NCloud.NBlockStore.NPrivateProto.TVolumeChannelsToPoolsKinds.Data:type_name -> NCloud.NBlockStore.NPrivateProto.TVolumeChannelsToPoolsKinds.DataEntry
	29, // 9: NCloud.NBlockStore.NPrivateProto.TSetupChannelsRequest.VolumeChannelsToPoolsKinds:type_name -> NCloud.NBlockStore.NPrivateProto.TVolumeChannelsToPoolsKinds
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_cloud_blockstore_private_api_protos_volume_proto_init() }
func file_cloud_blockstore_private_api_protos_volume_proto_init() {
	if File_cloud_blockstore_private_api_protos_volume_proto != nil {
		return
	}
	file_cloud_blockstore_private_api_protos_blob_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDescribeBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFreshBlockRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRangeInBlob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBlobPiece); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDescribeBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCompactRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCompactRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetCompactionStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetCompactionStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TModifyTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TModifyTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDescribeVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRebaseVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRebaseVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRebindVolumesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRebindVolumesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDrainNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDrainNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRebuildMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRebuildMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMetadataRebuildProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetRebuildMetadataStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetRebuildMetadataStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TScanDiskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TScanDiskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TScanDiskProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetScanDiskStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetScanDiskStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeChannelsToPoolsKinds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSetupChannelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSetupChannelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFinishFillDiskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFinishFillDiskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cloud_blockstore_private_api_protos_volume_proto_msgTypes[29].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_blockstore_private_api_protos_volume_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_blockstore_private_api_protos_volume_proto_goTypes,
		DependencyIndexes: file_cloud_blockstore_private_api_protos_volume_proto_depIdxs,
		EnumInfos:         file_cloud_blockstore_private_api_protos_volume_proto_enumTypes,
		MessageInfos:      file_cloud_blockstore_private_api_protos_volume_proto_msgTypes,
	}.Build()
	File_cloud_blockstore_private_api_protos_volume_proto = out.File
	file_cloud_blockstore_private_api_protos_volume_proto_rawDesc = nil
	file_cloud_blockstore_private_api_protos_volume_proto_goTypes = nil
	file_cloud_blockstore_private_api_protos_volume_proto_depIdxs = nil
}
