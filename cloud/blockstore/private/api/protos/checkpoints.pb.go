// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.0
// source: cloud/blockstore/private/api/protos/checkpoints.proto

package protos

import (
	protos "github.com/ydb-platform/nbs/cloud/storage/core/protos"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TDeleteCheckpointDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Label of the volume to delete checkpoint data from.
	DiskId string `protobuf:"bytes,1,opt,name=DiskId,proto3" json:"DiskId,omitempty"`
	// Checkpoint identifier.
	CheckpointId string `protobuf:"bytes,2,opt,name=CheckpointId,proto3" json:"CheckpointId,omitempty"`
}

func (x *TDeleteCheckpointDataRequest) Reset() {
	*x = TDeleteCheckpointDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_checkpoints_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeleteCheckpointDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeleteCheckpointDataRequest) ProtoMessage() {}

func (x *TDeleteCheckpointDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_checkpoints_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeleteCheckpointDataRequest.ProtoReflect.Descriptor instead.
func (*TDeleteCheckpointDataRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDescGZIP(), []int{0}
}

func (x *TDeleteCheckpointDataRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *TDeleteCheckpointDataRequest) GetCheckpointId() string {
	if x != nil {
		return x.CheckpointId
	}
	return ""
}

type TDeleteCheckpointDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional error, set only if error happened.
	Error *protos.TError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TDeleteCheckpointDataResponse) Reset() {
	*x = TDeleteCheckpointDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_private_api_protos_checkpoints_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeleteCheckpointDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeleteCheckpointDataResponse) ProtoMessage() {}

func (x *TDeleteCheckpointDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_private_api_protos_checkpoints_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeleteCheckpointDataResponse.ProtoReflect.Descriptor instead.
func (*TDeleteCheckpointDataResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDescGZIP(), []int{1}
}

func (x *TDeleteCheckpointDataResponse) GetError() *protos.TError {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_cloud_blockstore_private_api_protos_checkpoints_proto protoreflect.FileDescriptor

var file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDesc = []byte{
	0x0a, 0x35, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5a, 0x0a, 0x1c, 0x54, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x1d,
	0x54, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6e, 0x62, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDescOnce sync.Once
	file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDescData = file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDesc
)

func file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDescGZIP() []byte {
	file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDescOnce.Do(func() {
		file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDescData)
	})
	return file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDescData
}

var file_cloud_blockstore_private_api_protos_checkpoints_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cloud_blockstore_private_api_protos_checkpoints_proto_goTypes = []interface{}{
	(*TDeleteCheckpointDataRequest)(nil),  // 0: NCloud.NBlockStore.NPrivateProto.TDeleteCheckpointDataRequest
	(*TDeleteCheckpointDataResponse)(nil), // 1: NCloud.NBlockStore.NPrivateProto.TDeleteCheckpointDataResponse
	(*protos.TError)(nil),                 // 2: NCloud.NProto.TError
}
var file_cloud_blockstore_private_api_protos_checkpoints_proto_depIdxs = []int32{
	2, // 0: NCloud.NBlockStore.NPrivateProto.TDeleteCheckpointDataResponse.Error:type_name -> NCloud.NProto.TError
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cloud_blockstore_private_api_protos_checkpoints_proto_init() }
func file_cloud_blockstore_private_api_protos_checkpoints_proto_init() {
	if File_cloud_blockstore_private_api_protos_checkpoints_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_blockstore_private_api_protos_checkpoints_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeleteCheckpointDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_private_api_protos_checkpoints_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeleteCheckpointDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_blockstore_private_api_protos_checkpoints_proto_goTypes,
		DependencyIndexes: file_cloud_blockstore_private_api_protos_checkpoints_proto_depIdxs,
		MessageInfos:      file_cloud_blockstore_private_api_protos_checkpoints_proto_msgTypes,
	}.Build()
	File_cloud_blockstore_private_api_protos_checkpoints_proto = out.File
	file_cloud_blockstore_private_api_protos_checkpoints_proto_rawDesc = nil
	file_cloud_blockstore_private_api_protos_checkpoints_proto_goTypes = nil
	file_cloud_blockstore_private_api_protos_checkpoints_proto_depIdxs = nil
}
