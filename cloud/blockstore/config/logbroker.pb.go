// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.0
// source: cloud/blockstore/config/logbroker.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TLogbrokerConfig_EProtocol int32

const (
	TLogbrokerConfig_PROTOCOL_UNSPECIFIED TLogbrokerConfig_EProtocol = 0
	TLogbrokerConfig_PROTOCOL_PQ0         TLogbrokerConfig_EProtocol = 1
	TLogbrokerConfig_PROTOCOL_TOPIC_API   TLogbrokerConfig_EProtocol = 2
)

// Enum value maps for TLogbrokerConfig_EProtocol.
var (
	TLogbrokerConfig_EProtocol_name = map[int32]string{
		0: "PROTOCOL_UNSPECIFIED",
		1: "PROTOCOL_PQ0",
		2: "PROTOCOL_TOPIC_API",
	}
	TLogbrokerConfig_EProtocol_value = map[string]int32{
		"PROTOCOL_UNSPECIFIED": 0,
		"PROTOCOL_PQ0":         1,
		"PROTOCOL_TOPIC_API":   2,
	}
)

func (x TLogbrokerConfig_EProtocol) Enum() *TLogbrokerConfig_EProtocol {
	p := new(TLogbrokerConfig_EProtocol)
	*p = x
	return p
}

func (x TLogbrokerConfig_EProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TLogbrokerConfig_EProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_blockstore_config_logbroker_proto_enumTypes[0].Descriptor()
}

func (TLogbrokerConfig_EProtocol) Type() protoreflect.EnumType {
	return &file_cloud_blockstore_config_logbroker_proto_enumTypes[0]
}

func (x TLogbrokerConfig_EProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TLogbrokerConfig_EProtocol) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TLogbrokerConfig_EProtocol(num)
	return nil
}

// Deprecated: Use TLogbrokerConfig_EProtocol.Descriptor instead.
func (TLogbrokerConfig_EProtocol) EnumDescriptor() ([]byte, []int) {
	return file_cloud_blockstore_config_logbroker_proto_rawDescGZIP(), []int{0, 0}
}

type TLogbrokerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address               *string                     `protobuf:"bytes,1,opt,name=Address" json:"Address,omitempty"`
	Port                  *uint32                     `protobuf:"varint,2,opt,name=Port" json:"Port,omitempty"`
	Database              *string                     `protobuf:"bytes,3,opt,name=Database" json:"Database,omitempty"`
	UseLogbrokerCDS       *bool                       `protobuf:"varint,4,opt,name=UseLogbrokerCDS" json:"UseLogbrokerCDS,omitempty"`
	CaCertFilename        *string                     `protobuf:"bytes,5,opt,name=CaCertFilename" json:"CaCertFilename,omitempty"`
	Topic                 *string                     `protobuf:"bytes,6,opt,name=Topic" json:"Topic,omitempty"`
	SourceId              *string                     `protobuf:"bytes,7,opt,name=SourceId" json:"SourceId,omitempty"`
	MetadataServerAddress *string                     `protobuf:"bytes,8,opt,name=MetadataServerAddress" json:"MetadataServerAddress,omitempty"`
	Protocol              *TLogbrokerConfig_EProtocol `protobuf:"varint,9,opt,name=Protocol,enum=NCloud.NBlockStore.NProto.TLogbrokerConfig_EProtocol" json:"Protocol,omitempty"`
}

func (x *TLogbrokerConfig) Reset() {
	*x = TLogbrokerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_config_logbroker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLogbrokerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLogbrokerConfig) ProtoMessage() {}

func (x *TLogbrokerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_config_logbroker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLogbrokerConfig.ProtoReflect.Descriptor instead.
func (*TLogbrokerConfig) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_config_logbroker_proto_rawDescGZIP(), []int{0}
}

func (x *TLogbrokerConfig) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *TLogbrokerConfig) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *TLogbrokerConfig) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *TLogbrokerConfig) GetUseLogbrokerCDS() bool {
	if x != nil && x.UseLogbrokerCDS != nil {
		return *x.UseLogbrokerCDS
	}
	return false
}

func (x *TLogbrokerConfig) GetCaCertFilename() string {
	if x != nil && x.CaCertFilename != nil {
		return *x.CaCertFilename
	}
	return ""
}

func (x *TLogbrokerConfig) GetTopic() string {
	if x != nil && x.Topic != nil {
		return *x.Topic
	}
	return ""
}

func (x *TLogbrokerConfig) GetSourceId() string {
	if x != nil && x.SourceId != nil {
		return *x.SourceId
	}
	return ""
}

func (x *TLogbrokerConfig) GetMetadataServerAddress() string {
	if x != nil && x.MetadataServerAddress != nil {
		return *x.MetadataServerAddress
	}
	return ""
}

func (x *TLogbrokerConfig) GetProtocol() TLogbrokerConfig_EProtocol {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return TLogbrokerConfig_PROTOCOL_UNSPECIFIED
}

var File_cloud_blockstore_config_logbroker_proto protoreflect.FileDescriptor

var file_cloud_blockstore_config_logbroker_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6c, 0x6f, 0x67, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x4e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x03, 0x0a, 0x10, 0x54, 0x4c, 0x6f, 0x67, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x43, 0x44, 0x53, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x55, 0x73,
	0x65, 0x4c, 0x6f, 0x67, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x44, 0x53, 0x12, 0x26, 0x0a,
	0x0e, 0x43, 0x61, 0x43, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x61, 0x43, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x51, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x35, 0x2e, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x6f, 0x67,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x22, 0x4f, 0x0a, 0x09, 0x45, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4f, 0x4c, 0x5f, 0x50, 0x51, 0x30, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f, 0x41, 0x50, 0x49, 0x10,
	0x02, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x79, 0x64, 0x62, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6e, 0x62, 0x73,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
}

var (
	file_cloud_blockstore_config_logbroker_proto_rawDescOnce sync.Once
	file_cloud_blockstore_config_logbroker_proto_rawDescData = file_cloud_blockstore_config_logbroker_proto_rawDesc
)

func file_cloud_blockstore_config_logbroker_proto_rawDescGZIP() []byte {
	file_cloud_blockstore_config_logbroker_proto_rawDescOnce.Do(func() {
		file_cloud_blockstore_config_logbroker_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_blockstore_config_logbroker_proto_rawDescData)
	})
	return file_cloud_blockstore_config_logbroker_proto_rawDescData
}

var file_cloud_blockstore_config_logbroker_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloud_blockstore_config_logbroker_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_cloud_blockstore_config_logbroker_proto_goTypes = []interface{}{
	(TLogbrokerConfig_EProtocol)(0), // 0: NCloud.NBlockStore.NProto.TLogbrokerConfig.EProtocol
	(*TLogbrokerConfig)(nil),        // 1: NCloud.NBlockStore.NProto.TLogbrokerConfig
}
var file_cloud_blockstore_config_logbroker_proto_depIdxs = []int32{
	0, // 0: NCloud.NBlockStore.NProto.TLogbrokerConfig.Protocol:type_name -> NCloud.NBlockStore.NProto.TLogbrokerConfig.EProtocol
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cloud_blockstore_config_logbroker_proto_init() }
func file_cloud_blockstore_config_logbroker_proto_init() {
	if File_cloud_blockstore_config_logbroker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_blockstore_config_logbroker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLogbrokerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_blockstore_config_logbroker_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_blockstore_config_logbroker_proto_goTypes,
		DependencyIndexes: file_cloud_blockstore_config_logbroker_proto_depIdxs,
		EnumInfos:         file_cloud_blockstore_config_logbroker_proto_enumTypes,
		MessageInfos:      file_cloud_blockstore_config_logbroker_proto_msgTypes,
	}.Build()
	File_cloud_blockstore_config_logbroker_proto = out.File
	file_cloud_blockstore_config_logbroker_proto_rawDesc = nil
	file_cloud_blockstore_config_logbroker_proto_goTypes = nil
	file_cloud_blockstore_config_logbroker_proto_depIdxs = nil
}
